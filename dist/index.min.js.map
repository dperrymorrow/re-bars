{"version":3,"file":"index.min.js","sources":["../src/utils.js","../src/v-dom.js","../src/helpers.js","../src/index.js","../src/watcher.js"],"sourcesContent":["export default {\n  isKeyedNode($node) {\n    return $node.children.length\n      ? Array.from($node.children).every($child => $child.dataset.vbarsKey)\n      : false;\n  },\n\n  keyedChildren($node) {\n    return Array.from($node.children).filter($e => $e.dataset.vbarsKey);\n  },\n\n  randomId: () =>\n    \"_\" +\n    Math.random()\n      .toString(36)\n      .substr(2, 9),\n\n  setKey(obj, path, value) {\n    const arr = path.split(\".\");\n    arr.reduce((pointer, key, index) => {\n      if (!(key in pointer)) throw new Error(`${path} was not found in object`, obj);\n      if (index + 1 === arr.length) pointer[key] = value;\n      return pointer[key];\n    }, obj);\n  },\n};\n","import Utils from \"./utils.js\";\n\nexport default function({ id, templateFn, proxyData }) {\n  const $el = document.createElement(\"div\");\n  const render = () => ($el.innerHTML = templateFn(proxyData));\n\n  function _swapNodes($source, $target) {\n    const $clone = $source.cloneNode(true);\n    $target.parentNode.replaceChild($clone, $target);\n  }\n\n  function _addChild($container, $child) {\n    const $clone = $child.cloneNode(true);\n    $container.appendChild($clone);\n  }\n\n  function _compareKeys($vNode, $realNode) {\n    console.groupCollapsed(\"comparing keyed children\");\n    console.log(\"real parent\", $realNode);\n    console.log(\"virtual parent\", $vNode);\n\n    Utils.keyedChildren($realNode).forEach($e => {\n      const $v = $vNode.querySelector(`[data-vbars-key=\"${$e.dataset.vbarsKey}\"]`);\n      if (!$v) {\n        console.log(\"removing keyed node\", $e);\n        $e.remove();\n      } else if (!$v.isEqualNode($e)) {\n        console.log(\"swapping real\", $e);\n        console.log(\"with virual\", $v);\n        _swapNodes($v, $e);\n      }\n    });\n    // this is items that were added via push\n    Utils.keyedChildren($vNode).forEach($v => {\n      const $e = $realNode.querySelector(`[data-vbars-key=\"${$v.dataset.vbarsKey}\"]`);\n      if (!$e) {\n        console.log(\"could not find real node, adding\", $v);\n        _addChild($realNode, $v);\n      }\n    });\n\n    console.groupEnd();\n  }\n\n  function patch(path) {\n    const $target = document.getElementById(id);\n    console.groupCollapsed(`vDOM patching ${path}`);\n    render();\n\n    Array.from($el.querySelectorAll(\"[data-vbars-watch]\"))\n      .filter($e => path.startsWith($e.dataset.vbarsWatch))\n      .forEach($vNode => {\n        const $real = $target.querySelector(`[data-vbars-id=\"${$vNode.dataset.vbarsId}\"]`);\n        if (Utils.isKeyedNode($vNode)) {\n          _compareKeys($vNode, $real);\n        } else {\n          console.log(\"replacing\", $real);\n          console.log(\"with\", $vNode);\n          _swapNodes($vNode, $real);\n        }\n      });\n\n    console.groupEnd();\n  }\n\n  return {\n    $el,\n    render,\n    patch,\n  };\n}\n","import Utils from \"./utils.js\";\n\nexport default {\n  register({ id, instance, methods, components, proxyData }) {\n    window.vbars = window.vbars || { handlers: {} };\n    window.vbars.handlers[id] = {\n      bind: (event, path) => Utils.setKey(proxyData, path, event.currentTarget.value),\n    };\n    // we can garbage collect here...\n\n    function _handler() {\n      const [eventType, ...args] = arguments;\n      const opts = args.splice(-1, 1);\n\n      if (args.some(arg => arg !== null && typeof arg === \"object\"))\n        throw new Error(\n          `must only pass primitives as argument to a handler. ${JSON.stringify(args, null, 2)}`\n        );\n\n      const handler = { methodName: opts[0].name, eventType, args };\n      return new instance.SafeString(\n        `on${eventType}=\"vbars.handlers.${id}.${handler.methodName}(${args.join(\",\")})\"`\n      );\n    }\n\n    const _findRefs = () => {\n      return Array.from(document.getElementById(id)).reduce((obj, $el) => {\n        obj[$el.dataset.vbarsRef] = $el;\n        return obj;\n      }, {});\n    };\n\n    const _addData = pairs => {\n      return new instance.SafeString(\n        Object.keys(pairs)\n          .map(key => `data-vbars-${key}='${pairs[key]}'`)\n          .join(\" \")\n      );\n    };\n\n    instance.registerHelper(\"watch\", (path, options) => {\n      const id = `${options.loc.start.column}${options.loc.start.line}${options.loc.end.column}${options.loc.end.line}`;\n      return _addData({ id, watch: path });\n    });\n\n    Object.keys(components).forEach(name => {\n      instance.registerHelper(name, function() {\n        return new instance.SafeString(components[name].render());\n      });\n    });\n\n    instance.registerHelper(\"keyed\", val => _addData({ key: val }));\n    instance.registerHelper(\"isChecked\", val => (val ? \"checked\" : \"\"));\n    instance.registerHelper(\"ref\", key => _addData({ ref: key }));\n    instance.registerHelper(\n      \"bind\",\n      path => new instance.SafeString(`oninput=\"vbars.handlers.${id}.bind(event, '${path}')\"`)\n    );\n\n    // should throw an error if there is collision of method and comoponent name\n    Object.keys(methods).forEach(key => {\n      window.vbars.handlers[id][key] = function() {\n        return methods[key].call(\n          methods,\n          { data: proxyData, $refs: _findRefs(), event },\n          ...arguments\n        );\n      };\n      instance.registerHelper(key, _handler);\n    });\n  },\n};\n","import VDom from \"./v-dom.js\";\nimport Watcher from \"./watcher.js\";\nimport Helpers from \"./helpers.js\";\nimport Utils from \"./utils.js\";\n\nexport default {\n  create({\n    template,\n    data: rawData,\n    components = {},\n    methods = {},\n    Handlebars = window.Handlebars,\n  }) {\n    if (!Handlebars) throw new Error(\"Vbars need Handlebars in order to run!\");\n\n    const id = Utils.randomId();\n    const instance = Handlebars.create();\n    const proxyData = Watcher(rawData, ({ path }) => vDom.patch(path));\n\n    Helpers.register({ id, instance, methods, components, proxyData });\n\n    const templateFn = instance.compile(`<span id=\"${id}\">${template}</span>`);\n    const vDom = VDom({ id, templateFn, proxyData, methods });\n\n    return {\n      VbarsComponent: true,\n      instance,\n      id,\n      data: proxyData,\n      render() {\n        return templateFn(proxyData);\n      },\n    };\n  },\n};\n","function buildProxy(raw, callback, tree = []) {\n  return new Proxy(raw, {\n    get: function(target, prop) {\n      const value = Reflect.get(...arguments);\n      if (value !== null && typeof value === \"object\" && prop !== \"methods\")\n        return buildProxy(value, callback, tree.concat(prop));\n      else return value;\n    },\n\n    set: function(target, prop) {\n      const ret = Reflect.set(...arguments);\n      callback({ path: tree.concat(prop).join(\".\") });\n      return ret;\n    },\n\n    deleteProperty: function(target, prop) {\n      const ret = Reflect.deleteProperty(...arguments);\n      callback({ path: tree.concat(prop).join(\".\") });\n      return ret;\n    },\n  });\n}\n\nexport default buildProxy;\n"],"names":["isKeyedNode","$node","children","length","Array","from","every","$child","dataset","vbarsKey","keyedChildren","filter","$e","randomId","Math","random","toString","substr","[object Object]","obj","path","value","arr","split","reduce","pointer","key","index","Error","id","templateFn","proxyData","$el","document","createElement","render","innerHTML","_swapNodes","$source","$target","$clone","cloneNode","parentNode","replaceChild","patch","getElementById","querySelectorAll","startsWith","vbarsWatch","forEach","$vNode","$real","querySelector","vbarsId","Utils","$realNode","$v","isEqualNode","remove","$container","appendChild","_addChild","_compareKeys","instance","methods","components","_handler","eventType","args","arguments","opts","splice","some","arg","JSON","stringify","handler","methodName","name","SafeString","join","window","vbars","handlers","bind","event","setKey","currentTarget","_findRefs","vbarsRef","_addData","pairs","Object","keys","map","registerHelper","options","loc","start","column","line","end","watch","val","ref","call","data","$refs","template","rawData","Handlebars","create","buildProxy","raw","callback","tree","Proxy","get","target","prop","Reflect","concat","set","ret","deleteProperty","Watcher","vDom","Helpers","register","compile","VDom","VbarsComponent"],"mappings":"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"}