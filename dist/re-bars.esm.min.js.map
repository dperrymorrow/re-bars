{"version":3,"file":"re-bars.esm.min.js","sources":["../src/config.js","../src/utils/dom.js","../src/utils/index.js","../src/proxy-trap.js","../src/helpers.js","../src/utils/patch.js","../src/re-render.js","../src/garbage.js","../src/app.js"],"sourcesContent":["let isTracing = false;\n\nexport default {\n  logLevel: () => (isTracing ? 1 : 0),\n  setTrace: val => (isTracing = val),\n\n  regex: {\n    attrs: /rbs-(.*?)=\"(.*?)\"/g,\n    whitespace: /\\s/g,\n  },\n\n  attrs: {\n    watch: \"rbs-watch\",\n    method: \"rbs-method\",\n    ref: \"rbs-ref\",\n  },\n};\n","import Config from \"../config.js\";\nconst { attrs } = Config;\n\nexport default {\n  recordState($target) {\n    const $active = document.activeElement;\n    const ref = $active.getAttribute(attrs.ref);\n\n    if (!$target.contains($active) || !ref) return null;\n    return {\n      ref,\n      style: $active.getAttribute(\"style\"),\n      scrollTop: $active.scrollTop,\n      scrollLeft: $active.scrollLeft,\n      selectionStart: $active.selectionStart,\n    };\n  },\n\n  isTextNode: $el => $el.nodeType === Node.TEXT_NODE,\n\n  restoreState($target, activeRef) {\n    if (!activeRef) return;\n\n    const $input = this.findRef($target, activeRef.ref);\n    if (!$input) return;\n\n    $input.focus();\n    if (activeRef.selectionStart) {\n      const pos = $input.tagName === \"TEXTAREA\" ? activeRef.selectionStart : activeRef.selectionStart + 1;\n      $input.setSelectionRange(pos, pos);\n    }\n\n    $input.scrollTop = activeRef.scrollTop;\n    $input.scrollLeft = activeRef.scrollLeft;\n    if (activeRef.style) $input.setAttribute(\"style\", activeRef.style);\n  },\n\n  findRef: ($target, ref) => {\n    if ($target.getAttribute(attrs.ref) === ref) return $target;\n    return $target.querySelector(`[${attrs.ref}=\"${ref}\"]`);\n  },\n\n  findRefs($root) {\n    const { ref } = attrs;\n    const $refs = Array.from($root.querySelectorAll(`[${ref}]`));\n\n    return $refs.reduce((obj, $el) => {\n      const key = $el.getAttribute(ref);\n      const target = obj[key];\n      obj[key] = target ? [target].concat($el) : $el;\n      return obj;\n    }, {});\n  },\n\n  findMethod: id => document.querySelector(`[${attrs.method}=\"${id}\"]`),\n  findWatcher: id => document.querySelector(`[${attrs.watch}=\"${id}\"]`),\n\n  propStr: props =>\n    Object.entries(props)\n      .map(([key, val]) => {\n        if (typeof val === \"number\") return `${key}=${val}`;\n        else return `${key}=\"${val}\"`;\n      })\n      .join(\" \"),\n\n  wrapWatcher(id, html, hash) {\n    const { tag, ...props } = { tag: \"span\", ...hash };\n    const propStr = this.propStr(props);\n    const style = !html.length ? \"style='display:none;'\" : \"\";\n    return `<${tag} ${propStr} ${style} ${attrs.watch}=\"${id}\">${html}</${tag}>`;\n  },\n\n  getShadow(html) {\n    const $tmp = document.createElement(\"div\");\n    $tmp.innerHTML = html;\n    return $tmp;\n  },\n};\n","let counter = 1;\n\nimport Dom from \"./dom.js\";\n\nexport default {\n  dom: Dom,\n\n  debounce(callback, wait = 0, immediate = false) {\n    let timeout = null;\n\n    return function() {\n      const callNow = immediate && !timeout;\n      const next = () => callback.apply(this, arguments);\n\n      clearTimeout(timeout);\n      timeout = setTimeout(next, wait);\n\n      if (callNow) {\n        next();\n      }\n    };\n  },\n\n  nextTick() {\n    return new Promise(resolve => {\n      setTimeout(resolve, 0);\n    });\n  },\n\n  buildContext(scope, { $app, data, methods }) {\n    const context = {\n      $app,\n      $nextTick: this.nextTick,\n      $refs: this.dom.findRefs.bind(null, $app),\n      rootData: data,\n    };\n    context.methods = this.bind(methods, scope, context);\n    return context;\n  },\n\n  intersects: (obj1, obj2) => Object.keys(obj2).filter(key => key in obj1),\n\n  registerHelpers({ instance, helpers, scope }) {\n    const utils = this;\n    Object.entries(helpers).forEach(([name, fn]) =>\n      instance.registerHelper(name, function(...args) {\n        const context = utils.buildContext(this, scope);\n        return fn.call(this, context, ...args);\n      })\n    );\n  },\n\n  registerPartials({ instance, scope, partials }) {\n    Object.entries(partials).forEach(([name, partial]) => {\n      instance.registerPartial(name, partial.template);\n\n      [\"methods\", \"partials\", \"data\"].forEach(key => {\n        if (!(key in partial)) return;\n        const collide = this.intersects(scope[key], partial[key]);\n        if (collide.length) instance.log(2, `ReBars: partial ${name} has conflicting ${key} keys`, collide);\n      });\n\n      if (partial.data) Object.assign(scope.data, partial.data);\n      if (partial.methods) Object.assign(scope.methods, partial.methods);\n      if (partial.helpers) this.registerHelpers({ instance, helpers: partial.helpers, scope });\n    });\n  },\n\n  bind(obj, scope, ...args) {\n    return Object.keys(obj).reduce((bound, key) => {\n      bound[key] = obj[key].bind(scope, ...args);\n      return bound;\n    }, {});\n  },\n\n  shouldRender: (changed, watching) => changed.some(change => watching.some(watch => change.match(watch))),\n  randomId: () => counter++,\n};\n","import Utils from \"./utils/index.js\";\n\nexport default {\n  create(scope, callback, trackGet = false) {\n    let que = [];\n\n    const _debounced = Utils.debounce(() => {\n      callback(que);\n      que = [];\n    });\n\n    const _addToQue = path => {\n      if (!que.includes(path)) que.push(path);\n      _debounced(que);\n    };\n\n    function _buildProxy(raw, tree = []) {\n      return new Proxy(raw, {\n        get: function(target, prop) {\n          const value = Reflect.get(...arguments);\n\n          if (typeof value === \"function\" && target.hasOwnProperty(prop))\n            return value.bind(proxyData, Utils.buildContext(target, scope));\n\n          if (value && typeof value === \"object\" && [\"Array\", \"Object\"].includes(value.constructor.name)) {\n            return _buildProxy(value, tree.concat(prop));\n          } else {\n            if (trackGet) _addToQue(tree.concat(prop).join(\".\"));\n            return value;\n          }\n        },\n\n        set: function(target, prop, value) {\n          const ret = Reflect.set(...arguments);\n          const path = tree.concat(prop).join(\".\");\n          _addToQue(path);\n          return ret;\n        },\n\n        deleteProperty: function(target, prop) {\n          const ret = Reflect.deleteProperty(...arguments);\n          const path = tree.concat(prop).join(\".\");\n          _addToQue(path);\n          return ret;\n        },\n      });\n    }\n\n    const proxyData = _buildProxy(scope.data);\n    return proxyData;\n  },\n};\n","// import Msg from \"./msg.js\";\nimport Utils from \"./utils/index.js\";\nimport ProxyTrap from \"./proxy-trap.js\";\nimport Config from \"./config.js\";\n\nconst { attrs } = Config;\n\nexport default {\n  register({ instance, template, store, scope }) {\n    instance.registerHelper(\"ref\", name => new instance.SafeString(`${attrs.ref}=\"${name}\"`));\n\n    instance.registerHelper(\"on\", function(...args) {\n      const { hash } = args.pop();\n      const id = Utils.randomId();\n      const tplScope = this;\n\n      store.handlers[id] = [];\n\n      Object.entries(hash).forEach(([eventType, methodName]) => {\n        // check for method existance\n\n        Utils.nextTick().then(function() {\n          const $el = Utils.dom.findMethod(id);\n          if (!$el) return;\n\n          if (!(methodName in scope.methods)) instance.log(3, `ReBars: \"${methodName}\" is not a method.`, hash, $el);\n\n          const handler = event => {\n            const context = Utils.buildContext(tplScope, scope);\n            context.event = event;\n            context.methods[methodName](...args);\n          };\n\n          store.handlers[id].push({ $el, handler, eventType });\n          $el.addEventListener(eventType, handler);\n        });\n      });\n\n      return new instance.SafeString(`${attrs.method}=\"${id}\"`);\n    });\n\n    instance.registerHelper(\"watch\", function(...args) {\n      const { fn, hash } = args.pop();\n      const eId = Utils.randomId();\n\n      const ref = {\n        path: args.filter(arg => typeof arg === \"string\"),\n        render: () => fn(this),\n      };\n\n      if (!args.length) {\n        const trap = ProxyTrap.create(\n          { ...scope, data: this },\n          paths => {\n            ref.path = paths;\n          },\n          true\n        );\n\n        fn(trap);\n      }\n\n      Utils.nextTick().then(() => {\n        const $el = Utils.dom.findWatcher(eId);\n        if (!$el) return;\n\n        store.renders[eId] = { ...ref, $el };\n\n        args.forEach(path => {\n          if (typeof path !== \"string\") instance.log(3, \"ReBars: can only watch Strings\", args, $el);\n        });\n        instance.log(Config.logLevel(), \"ReBars: watching\", ref.path, $el);\n      });\n\n      return Utils.dom.wrapWatcher(eId, fn(this), hash);\n    });\n  },\n};\n","import Utils from \"./index.js\";\nimport Config from \"../config.js\";\n\nconst { attrs, regex } = Config;\n\nfunction _isEqHtml(html1, html2) {\n  const parsed1 = html1.replace(regex.attrs, \"\");\n  const parsed2 = html2.replace(regex.attrs, \"\");\n  return Utils.dom.getShadow(parsed1).isEqualNode(Utils.dom.getShadow(parsed2));\n}\n\nexport default {\n  canPatch: $target =>\n    $target.children.length &&\n    $target.children.length > 1 &&\n    Array.from($target.children).every($el => $el.getAttribute(attrs.ref)),\n\n  hasChanged: ($target, html) => !_isEqHtml($target.innerHTML, html),\n\n  compare({ $target, html, instance, store }) {\n    const $shadow = Utils.dom.getShadow(html);\n    const $vChilds = Array.from($shadow.children);\n    const level = Config.logLevel();\n\n    // deletes and updates\n    Array.from($target.children).forEach($r => {\n      const $v = Utils.dom.findRef($shadow, $r.getAttribute(attrs.ref));\n      if (!$v) {\n        instance.log(level, \"ReBars: removing\", $r);\n        $r.remove();\n      } else if (!_isEqHtml($v.innerHTML, $r.innerHTML, true)) {\n        instance.log(level, \"ReBars: updating\", $r, $v);\n        $r.replaceWith($v.cloneNode(true));\n      }\n    });\n\n    // additions\n    $vChilds.forEach(($v, index) => {\n      const $r = Utils.dom.findRef($target, $v.getAttribute(attrs.ref));\n      if (!$r) {\n        instance.log(level, \"ReBars: adding\", $v);\n        $target.append($v.cloneNode(true));\n      }\n    });\n\n    // sorting\n    $vChilds.forEach(($v, index) => {\n      const $r = $target.children[index];\n      if ($r.getAttribute(attrs.ref) !== $v.getAttribute(attrs.ref)) $r.replaceWith($v.cloneNode(true));\n    });\n  },\n};\n","import Utils from \"./utils/index.js\";\nimport Patch from \"./utils/patch.js\";\nimport Config from \"./config.js\";\n\nexport default {\n  paths({ changed, store, instance }) {\n    Object.entries(store.renders)\n      .filter(([renderId, handler]) => {\n        return Utils.shouldRender(changed, handler.path) && Utils.dom.findWatcher(renderId);\n      })\n      .forEach(([renderId, handler]) => {\n        const $target = Utils.dom.findWatcher(renderId);\n        // if we cant find the target, we should not attempt to re-renders\n        // this can probally be cleaned up with clearing orphans on the app\n        // TODO: this should not be needed if garbage is collected well\n        if (!$target) return;\n\n        const html = handler.render();\n        const stash = Utils.dom.recordState($target);\n\n        if (!Patch.hasChanged($target, html)) return;\n\n        if (Patch.canPatch($target)) {\n          instance.log(Config.logLevel(), \"ReBars: patching\", handler.path, $target);\n          Patch.compare({ $target, html, instance, store });\n          Utils.dom.restoreState($target, stash);\n          return;\n        }\n\n        // warn for not having a ref on array update\n        const lenPath = handler.path.find(path => path.endsWith(\".length\") && $target.children.length > 1);\n        if (lenPath)\n          instance.log(\n            2,\n            \"ReBars: add a {{ ref someUniqueKey }} to each to avoid re-rendering the entire Array\",\n            handler.path,\n            $target\n          );\n\n        $target.style.display = html === \"\" ? \"none\" : \"\";\n        $target.innerHTML = html;\n\n        Utils.dom.restoreState($target, stash);\n        instance.log(Config.logLevel(), \"ReBars: render\", handler.path, $target);\n      });\n  },\n};\n","import Config from \"./config.js\";\n\nexport default {\n  start($app, { renders, handlers }) {\n    const observer = new MutationObserver(([record]) => {\n      record.removedNodes.forEach($el => {\n        if ($el.nodeType === Node.ELEMENT_NODE) {\n          const watchId = $el.getAttribute(Config.attrs.watch);\n          const handlerId = $el.getAttribute(Config.attrs.method);\n          if (watchId) delete renders[watchId];\n\n          if (handlerId) {\n            handlers[handlerId].forEach(item => {\n              item.$el.removeEventListener(item.eventType, item.handler);\n            });\n            delete handlers[handlerId];\n          }\n        }\n      });\n    });\n\n    observer.observe($app, { attributes: true, childList: true, subtree: true });\n    return observer;\n  },\n};\n","import Helpers from \"./helpers.js\";\nimport ReRender from \"./re-render.js\";\nimport ProxyTrap from \"./proxy-trap.js\";\nimport Utils from \"./utils/index.js\";\nimport Config from \"./config.js\";\nimport Garbage from \"./garbage.js\";\n\nexport default {\n  app({\n    helpers = {},\n    template,\n    data = {},\n    methods = {},\n    partials = {},\n    watch = {},\n    Handlebars = window.Handlebars,\n    trace = false,\n  }) {\n    const instance = Handlebars.create();\n    const templateFn = instance.compile(template);\n    const store = { renders: {}, handlers: {} };\n\n    Config.setTrace(trace);\n\n    return {\n      store,\n      instance,\n      render(selector) {\n        const $app = document.querySelector(selector);\n\n        if (!$app)\n          return instance.log(3, `ReBars: document.querySelector(\"${selector}\") could not be found on the document`);\n\n        const scope = {\n          $app,\n          methods,\n          data,\n        };\n\n        Utils.registerPartials({ instance, scope, partials });\n        Utils.registerHelpers({ instance, helpers, scope });\n        Helpers.register({ instance, template, store, scope });\n\n        scope.data = ProxyTrap.create(scope, changed => {\n          instance.log(Config.logLevel(), \"ReBars: change\", changed);\n          ReRender.paths({ changed, store, instance });\n          Object.entries(watch).forEach(([path, fn]) => {\n            if (Utils.shouldRender(changed, [path])) fn.call(scope);\n          });\n        });\n\n        Garbage.start($app, store);\n        $app.innerHTML = templateFn(scope.data);\n      },\n    };\n  },\n};\n"],"names":["isTracing","logLevel","setTrace","val","regex","attrs","whitespace","watch","method","ref","Config","counter","dom","[object Object]","$target","$active","document","activeElement","getAttribute","contains","style","scrollTop","scrollLeft","selectionStart","isTextNode","$el","nodeType","Node","TEXT_NODE","activeRef","$input","this","findRef","focus","pos","tagName","setSelectionRange","setAttribute","querySelector","$root","Array","from","querySelectorAll","reduce","obj","key","target","concat","findMethod","id","findWatcher","propStr","props","Object","entries","map","join","html","hash","tag","length","$tmp","createElement","innerHTML","callback","wait","immediate","timeout","callNow","next","apply","arguments","clearTimeout","setTimeout","nextTick","Promise","resolve","scope","$app","data","methods","context","$nextTick","$refs","findRefs","bind","rootData","intersects","obj1","obj2","keys","filter","instance","helpers","utils","forEach","name","fn","registerHelper","args","buildContext","call","partials","partial","registerPartial","template","collide","log","assign","registerHelpers","bound","shouldRender","changed","watching","some","change","match","randomId","trackGet","que","_debounced","Utils","debounce","_addToQue","path","includes","push","proxyData","_buildProxy","raw","tree","Proxy","get","prop","value","Reflect","hasOwnProperty","constructor","set","ret","deleteProperty","store","SafeString","pop","tplScope","handlers","eventType","methodName","then","handler","event","addEventListener","eId","arg","render","trap","ProxyTrap","create","paths","renders","wrapWatcher","_isEqHtml","html1","html2","parsed1","replace","parsed2","getShadow","isEqualNode","canPatch","children","every","hasChanged","$shadow","$vChilds","level","$r","$v","replaceWith","cloneNode","remove","index","append","renderId","stash","recordState","Patch","compare","restoreState","find","endsWith","display","observer","MutationObserver","record","removedNodes","ELEMENT_NODE","watchId","handlerId","item","removeEventListener","observe","attributes","childList","subtree","Handlebars","window","trace","templateFn","compile","selector","registerPartials","Helpers","register","ReRender","Garbage","start"],"mappings":"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"}