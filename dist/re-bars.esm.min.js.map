{"version":3,"file":"re-bars.esm.min.js","sources":["../src/config.js","../src/utils/dom.js","../src/utils/index.js","../src/proxy-trap.js","../src/helpers.js","../src/utils/patch.js","../src/re-render.js","../src/app.js"],"sourcesContent":["let isTracing = false;\n\nexport default {\n  logLevel: () => (isTracing ? 1 : 0),\n  setTrace: val => (isTracing = val),\n\n  regex: {\n    attrs: /rbs-(.*?)=\"(.*?)\"/g,\n    whitespace: /\\s/g,\n  },\n\n  attrs: {\n    watch: \"rbs-watch\",\n    method: \"rbs-method\",\n    ref: \"rbs-ref\",\n  },\n};\n","import Config from \"../config.js\";\nconst { attrs } = Config;\n\nexport default {\n  recordState($target) {\n    const $active = document.activeElement;\n    const ref = $active.getAttribute(attrs.ref);\n\n    if (!$target.contains($active) || !ref) return null;\n    return {\n      ref,\n      style: $active.getAttribute(\"style\"),\n      scrollTop: $active.scrollTop,\n      scrollLeft: $active.scrollLeft,\n      selectionStart: $active.selectionStart,\n    };\n  },\n\n  restoreState($target, activeRef) {\n    if (!activeRef) return;\n\n    const $input = this.findRef($target, activeRef.ref);\n    if (!$input) return;\n\n    $input.focus();\n    if (activeRef.selectionStart) {\n      const pos = $input.tagName === \"TEXTAREA\" ? activeRef.selectionStart : activeRef.selectionStart + 1;\n      $input.setSelectionRange(pos, pos);\n    }\n\n    $input.scrollTop = activeRef.scrollTop;\n    $input.scrollLeft = activeRef.scrollLeft;\n    if (activeRef.style) $input.setAttribute(\"style\", activeRef.style);\n  },\n\n  findRef: ($target, ref) => {\n    if ($target.getAttribute(attrs.ref) === ref) return $target;\n    return $target.querySelector(`[${attrs.ref}=\"${ref}\"]`);\n  },\n\n  findRefs($root) {\n    const { ref } = attrs;\n    const $refs = Array.from($root.querySelectorAll(`[${ref}]`));\n\n    return $refs.reduce((obj, $el) => {\n      const key = $el.getAttribute(ref);\n      const target = obj[key];\n      obj[key] = target ? [target].concat($el) : $el;\n      return obj;\n    }, {});\n  },\n\n  findMethod: id => document.querySelector(`[${attrs.method}=\"${id}\"]`),\n  findWatcher: id => document.querySelector(`[${attrs.watch}=\"${id}\"]`),\n\n  propStr: props =>\n    Object.entries(props)\n      .map(([key, val]) => {\n        if (typeof val === \"number\") return `${key}=${val}`;\n        else return `${key}=\"${val}\"`;\n      })\n      .join(\" \"),\n\n  wrapWatcher(id, html, hash) {\n    const { tag, ...props } = { tag: \"span\", ...hash };\n    const propStr = this.propStr(props);\n    const style = !html.length ? \"style='display:none;'\" : \"\";\n    return `<${tag} ${propStr} ${style} ${attrs.watch}=\"${id}\">${html}</${tag}>`;\n  },\n\n  getShadow(html) {\n    const $tmp = document.createElement(\"div\");\n    $tmp.innerHTML = html;\n    return $tmp;\n  },\n};\n","let counter = 1;\n\nimport Dom from \"./dom.js\";\n\nexport default {\n  dom: Dom,\n\n  debounce(callback, wait = 0, immediate = false) {\n    let timeout = null;\n\n    return function() {\n      const callNow = immediate && !timeout;\n      const next = () => callback.apply(this, arguments);\n\n      clearTimeout(timeout);\n      timeout = setTimeout(next, wait);\n\n      if (callNow) {\n        next();\n      }\n    };\n  },\n\n  nextTick() {\n    return new Promise(resolve => {\n      setTimeout(resolve, 0);\n    });\n  },\n\n  intersects: (obj1, obj2) => Object.keys(obj2).filter(key => key in obj1),\n\n  registerHelpers(instance, helpers) {\n    Object.entries(helpers).forEach(([name, fn]) => instance.registerHelper(name, fn));\n  },\n\n  registerPartials(instance, scope, partials) {\n    Object.entries(partials).forEach(([name, partial]) => {\n      instance.registerPartial(name, partial.template);\n\n      [\"methods\", \"partials\", \"data\"].forEach(key => {\n        if (!(key in partial)) return;\n        const collide = this.intersects(scope[key], partial[key]);\n        if (collide.length) instance.log(2, `ReBars: partial ${name} has conflicting ${key} keys`, collide);\n      });\n\n      if (partial.data) Object.assign(scope.data, partial.data);\n      if (partial.methods) Object.assign(scope.methods, partial.methods);\n      if (partial.helpers) this.registerHelpers(instance, partial.helpers);\n    });\n  },\n\n  bind(obj, scope, ...args) {\n    return Object.keys(obj).reduce((bound, key) => {\n      bound[key] = obj[key].bind(scope, ...args);\n      return bound;\n    }, {});\n  },\n\n  shouldRender(path, watchPaths) {\n    return watchPaths.some(watchPath => {\n      if (path === watchPath || watchPath === \".*\") return true;\n      const pathSegs = path.split(\".\");\n      const watchSegs = watchPath.split(\".\");\n\n      return watchSegs.every((seg, index) => {\n        if (seg === pathSegs[index] || seg === \"*\") return true;\n        return false;\n      });\n    });\n  },\n\n  randomId: () => `rbs${counter++}`,\n};\n","import Utils from \"./utils/index.js\";\n\nexport default {\n  create(data, callback, trackGet = false) {\n    let que = [];\n\n    const _debounced = Utils.debounce(() => {\n      callback(que);\n      que = [];\n    });\n\n    const _addToQue = path => {\n      if (!que.includes(path)) que.push(path);\n      _debounced(que);\n    };\n\n    function _buildProxy(raw, tree = []) {\n      return new Proxy(raw, {\n        get: function(target, prop) {\n          const value = Reflect.get(...arguments);\n\n          if (value && typeof value === \"object\" && [\"Array\", \"Object\"].includes(value.constructor.name)) {\n            return _buildProxy(value, tree.concat(prop));\n          } else {\n            if (trackGet) _addToQue(tree.concat(prop).join(\".\"));\n            return value;\n          }\n        },\n\n        set: function(target, prop, value) {\n          const ret = Reflect.set(...arguments);\n          const path = tree.concat(prop).join(\".\");\n          _addToQue(path);\n          return ret;\n        },\n\n        deleteProperty: function(target, prop) {\n          const ret = Reflect.deleteProperty(...arguments);\n          const path = tree.concat(prop).join(\".\");\n          _addToQue(path);\n          return ret;\n        },\n      });\n    }\n\n    const proxyData = _buildProxy(data);\n    return proxyData;\n  },\n};\n","// import Msg from \"./msg.js\";\nimport Utils from \"./utils/index.js\";\nimport ProxyTrap from \"./proxy-trap.js\";\nimport Config from \"./config.js\";\n\nconst { attrs } = Config;\n\nexport default {\n  register({ instance, template, store, scope }) {\n    instance.registerHelper(\"ref\", name => new instance.SafeString(`${attrs.ref}=\"${name}\"`));\n    instance.registerHelper(\"buildPath\", function(...args) {\n      args.pop();\n      return Array.from(args).join(\".\");\n    });\n\n    instance.registerHelper(\"on\", function(...args) {\n      const { hash, loc } = args.pop();\n      const id = Utils.randomId();\n      const tplScope = this;\n\n      Object.entries(hash).forEach(([eventType, methodName]) => {\n        // check for method existance\n\n        Utils.nextTick().then(function() {\n          const $el = Utils.dom.findMethod(id);\n          if (!$el) return;\n\n          if (!(methodName in scope.methods)) instance.log(3, `ReBars: \"${methodName}\" is not a method.`, hash, $el);\n\n          $el.addEventListener(eventType, event => {\n            const context = {\n              event,\n              $app: scope.$app,\n              $refs: Utils.dom.findRefs.bind(null, scope.$app),\n              $nextTick: Utils.nextTick,\n              rootData: scope.data,\n            };\n\n            context.methods = Utils.bind(scope.methods, tplScope, context);\n            context.methods[methodName](...args);\n          });\n        });\n      });\n\n      return new instance.SafeString(`${attrs.method}=\"${id}\"`);\n    });\n\n    instance.registerHelper(\"watch\", function(...args) {\n      const { fn, hash } = args.pop();\n      const eId = Utils.randomId();\n\n      if (!args.length) {\n        const trap = ProxyTrap.create(\n          this,\n          paths => {\n            store.renders[eId].path = paths;\n          },\n          true\n        );\n\n        fn(trap);\n      }\n\n      store.renders[eId] = {\n        path: args.filter(arg => typeof arg === \"string\"),\n        render: () => fn(this),\n      };\n\n      Utils.nextTick().then(() => {\n        const $el = Utils.dom.findWatcher(eId);\n        if (!$el) return;\n\n        args.forEach(path => {\n          if (typeof path !== \"string\") instance.log(3, \"ReBars: can only watch Strings\", args, $el);\n        });\n        instance.log(Config.logLevel(), \"ReBars: watching\", store.renders[eId].path, $el);\n      });\n\n      return Utils.dom.wrapWatcher(eId, fn(this), hash);\n    });\n  },\n};\n","import Utils from \"./index.js\";\nimport Config from \"../config.js\";\n\nconst { attrs, regex } = Config;\n\nfunction _isEqHtml(html1, html2) {\n  const parsed1 = html1.replace(regex.attrs, \"\");\n  const parsed2 = html2.replace(regex.attrs, \"\");\n  return Utils.dom.getShadow(parsed1).isEqualNode(Utils.dom.getShadow(parsed2));\n}\n\nexport default {\n  canPatch: $target =>\n    $target.children.length &&\n    $target.children.length > 1 &&\n    Array.from($target.children).every($el => $el.getAttribute(attrs.ref)),\n\n  hasChanged: ($target, html) => !_isEqHtml($target.innerHTML, html),\n\n  compare({ $target, html, instance }) {\n    const $shadow = Utils.dom.getShadow(html);\n    const $vChilds = Array.from($shadow.children);\n    const level = Config.logLevel();\n\n    // deletes and updates\n    Array.from($target.children).forEach($r => {\n      const $v = Utils.dom.findRef($shadow, $r.getAttribute(attrs.ref));\n      if (!$v) {\n        instance.log(level, \"ReBars: removing\", $r);\n        $r.remove();\n      } else if (!_isEqHtml($v.innerHTML, $r.innerHTML, true)) {\n        instance.log(level, \"ReBars: updating\", $r, $v);\n        $r.replaceWith($v.cloneNode(true));\n      }\n    });\n\n    // additions\n    $vChilds.forEach(($v, index) => {\n      const $r = Utils.dom.findRef($target, $v.getAttribute(attrs.ref));\n      if (!$r) {\n        instance.log(level, \"ReBars: adding\", $v);\n        $target.append($v.cloneNode(true));\n      }\n    });\n\n    // sorting\n    $vChilds.forEach(($v, index) => {\n      const $r = $target.children[index];\n      if ($r.getAttribute(attrs.ref) !== $v.getAttribute(attrs.ref)) $r.replaceWith($v.cloneNode(true));\n    });\n  },\n};\n","import Utils from \"./utils/index.js\";\nimport Patch from \"./utils/patch.js\";\nimport Config from \"./config.js\";\n\nexport default {\n  paths({ paths, renders, instance }) {\n    Object.entries(renders)\n      .filter(([renderId, handler]) => {\n        const matches = paths.some(path => Utils.shouldRender(path, handler.path));\n        return matches && Utils.dom.findWatcher(renderId);\n      })\n      .forEach(([renderId, handler]) => {\n        const $target = Utils.dom.findWatcher(renderId);\n        // if we cant find the target, we should not attempt to re-renders\n        // this can probally be cleaned up with clearing orphans on the app\n\n        if (!$target) return;\n\n        const html = handler.render();\n        const stash = Utils.dom.recordState($target);\n\n        if (!Patch.hasChanged($target, html)) return;\n\n        if (Patch.canPatch($target)) {\n          instance.log(Config.logLevel(), \"ReBars: patching\", handler.path, $target);\n          Patch.compare({ $target, html, instance });\n          Utils.dom.restoreState($target, stash);\n          return;\n        }\n\n        // warn for not having a ref on array update\n        const lenPath = handler.path.find(path => path.endsWith(\".length\"));\n        if (lenPath)\n          instance.log(\n            2,\n            \"ReBars: add a {{ ref someUniqueKey }} to each to avoid re-rendering the entire Array\",\n            handler.path,\n            $target\n          );\n\n        $target.style.display = html === \"\" ? \"none\" : \"\";\n        $target.innerHTML = html;\n\n        Utils.dom.restoreState($target, stash);\n        instance.log(Config.logLevel(), \"ReBars: render\", handler.path, $target);\n      });\n  },\n};\n","// import Msg from \"./msg.js\";\nimport Helpers from \"./helpers.js\";\nimport ReRender from \"./re-render.js\";\nimport ProxyTrap from \"./proxy-trap.js\";\nimport Utils from \"./utils/index.js\";\nimport Config from \"./config.js\";\n\nexport default {\n  app({\n    helpers = {},\n    template,\n    data = {},\n    refs = {},\n    methods = {},\n    partials = {},\n    watch = {},\n    Handlebars = window.Handlebars,\n    trace = false,\n  }) {\n    const instance = Handlebars.create();\n    const templateFn = instance.compile(template);\n    const store = { renders: {} };\n\n    Config.setTrace(trace);\n    Utils.registerHelpers(instance, helpers);\n\n    return {\n      store,\n      instance,\n      render(selector) {\n        const $app = document.querySelector(selector);\n        const scope = {\n          $app,\n          methods,\n          data,\n        };\n\n        Helpers.register({ instance, template, store, scope });\n        Utils.registerPartials(instance, scope, partials);\n\n        // for the methods\n        scope.data = Object.entries(scope.data).reduce((scoped, [key, value]) => {\n          if (typeof value === \"function\" && scoped.hasOwnProperty(key)) scoped[key] = value.bind(scope);\n          return scoped;\n        }, data);\n\n        scope.data = ProxyTrap.create(data, paths => {\n          instance.log(Config.logLevel(), \"ReBars: change\", paths);\n          ReRender.paths({ paths, renders: store.renders, instance });\n          Object.entries(watch).forEach(([path, fn]) => {\n            if (paths.some(path => Utils.shouldRender(path, paths))) fn.call(scope);\n          });\n        });\n\n        const observer = new MutationObserver(mutationList => {\n          mutationList.forEach(({ addedNodes, removedNodes }) => {\n            removedNodes.forEach($el => {\n              if ($el.nodeType === Node.TEXT_NODE) return;\n              const watch = $el.getAttribute(Config.attrs.watch);\n              if (watch) delete store.renders[watch];\n            });\n          });\n        });\n\n        observer.observe($app, {\n          childList: true,\n          attributes: true,\n          subtree: true,\n        });\n\n        $app.innerHTML = templateFn(scope.data);\n      },\n    };\n  },\n};\n"],"names":["isTracing","logLevel","setTrace","val","regex","attrs","whitespace","watch","method","ref","Config","counter","dom","[object Object]","$target","$active","document","activeElement","getAttribute","contains","style","scrollTop","scrollLeft","selectionStart","activeRef","$input","this","findRef","focus","pos","tagName","setSelectionRange","setAttribute","querySelector","$root","Array","from","querySelectorAll","reduce","obj","$el","key","target","concat","findMethod","id","findWatcher","propStr","props","Object","entries","map","join","html","hash","tag","length","$tmp","createElement","innerHTML","callback","wait","immediate","timeout","callNow","next","apply","arguments","clearTimeout","setTimeout","nextTick","Promise","resolve","intersects","obj1","obj2","keys","filter","instance","helpers","forEach","name","fn","registerHelper","scope","partials","partial","registerPartial","template","collide","log","data","assign","methods","registerHelpers","bind","args","bound","shouldRender","path","watchPaths","some","watchPath","pathSegs","split","every","seg","index","randomId","trackGet","que","_debounced","Utils","debounce","_addToQue","includes","push","_buildProxy","raw","tree","Proxy","get","prop","value","Reflect","constructor","set","ret","deleteProperty","store","SafeString","pop","loc","tplScope","eventType","methodName","then","addEventListener","event","context","$app","$refs","findRefs","$nextTick","rootData","eId","trap","ProxyTrap","create","paths","renders","arg","render","wrapWatcher","_isEqHtml","html1","html2","parsed1","replace","parsed2","getShadow","isEqualNode","canPatch","children","hasChanged","$shadow","$vChilds","level","$r","$v","replaceWith","cloneNode","remove","append","renderId","handler","stash","recordState","Patch","compare","restoreState","find","endsWith","display","refs","Handlebars","window","trace","templateFn","compile","selector","Helpers","register","registerPartials","scoped","hasOwnProperty","ReRender","call","MutationObserver","mutationList","addedNodes","removedNodes","nodeType","Node","TEXT_NODE","observe","childList","attributes","subtree"],"mappings":"AAAA,IAAIA,GAAY,EAEhB,MAAe,CACbC,SAAU,IAAOD,EAAY,EAAI,EACjCE,SAAUC,GAAQH,EAAYG,EAE9BC,MAAO,CACLC,MAAO,qBACPC,WAAY,OAGdD,MAAO,CACLE,MAAO,YACPC,OAAQ,aACRC,IAAK,YCbT,MAAMJ,MAAEA,GAAUK,ECDlB,IAAIC,EAAU,EAId,MAAe,CACbC,IDFa,CACbC,YAAYC,GACV,MAAMC,EAAUC,SAASC,cACnBR,EAAMM,EAAQG,aAAab,EAAMI,KAEvC,OAAKK,EAAQK,SAASJ,IAAaN,EAC5B,CACLA,IAAAA,EACAW,MAAOL,EAAQG,aAAa,SAC5BG,UAAWN,EAAQM,UACnBC,WAAYP,EAAQO,WACpBC,eAAgBR,EAAQQ,gBANqB,MAUjDV,aAAaC,EAASU,GACpB,IAAKA,EAAW,OAEhB,MAAMC,EAASC,KAAKC,QAAQb,EAASU,EAAUf,KAC/C,GAAKgB,EAAL,CAGA,GADAA,EAAOG,QACHJ,EAAUD,eAAgB,CAC5B,MAAMM,EAAyB,aAAnBJ,EAAOK,QAAyBN,EAAUD,eAAiBC,EAAUD,eAAiB,EAClGE,EAAOM,kBAAkBF,EAAKA,GAGhCJ,EAAOJ,UAAYG,EAAUH,UAC7BI,EAAOH,WAAaE,EAAUF,WAC1BE,EAAUJ,OAAOK,EAAOO,aAAa,QAASR,EAAUJ,SAG9DO,QAAS,CAACb,EAASL,IACbK,EAAQI,aAAab,EAAMI,OAASA,EAAYK,EAC7CA,EAAQmB,cAAc,IAAI5B,EAAMI,QAAQA,OAGjDI,SAASqB,GACP,MAAMzB,IAAEA,GAAQJ,EAGhB,OAFc8B,MAAMC,KAAKF,EAAMG,iBAAiB,IAAI5B,OAEvC6B,OAAO,CAACC,EAAKC,KACxB,MAAMC,EAAMD,EAAItB,aAAaT,GACvBiC,EAASH,EAAIE,GAEnB,OADAF,EAAIE,GAAOC,EAAS,CAACA,GAAQC,OAAOH,GAAOA,EACpCD,GACN,KAGLK,WAAYC,GAAM7B,SAASiB,cAAc,IAAI5B,EAAMG,WAAWqC,OAC9DC,YAAaD,GAAM7B,SAASiB,cAAc,IAAI5B,EAAME,UAAUsC,OAE9DE,QAASC,GACPC,OAAOC,QAAQF,GACZG,IAAI,EAAEV,EAAKtC,KACS,iBAARA,EAAyB,GAAGsC,KAAOtC,IAClC,GAAGsC,MAAQtC,MAExBiD,KAAK,KAEVvC,YAAYgC,EAAIQ,EAAMC,GACpB,MAAMC,IAAEA,KAAQP,GAAU,CAAEO,IAAK,UAAWD,GAG5C,MAAO,IAAIC,KAFK7B,KAAKqB,QAAQC,MACdK,EAAKG,OAAmC,GAA1B,2BACSnD,EAAME,UAAUsC,MAAOQ,MAASE,MAGxE1C,UAAUwC,GACR,MAAMI,EAAOzC,SAAS0C,cAAc,OAEpC,OADAD,EAAKE,UAAYN,EACVI,IClET5C,SAAS+C,EAAUC,EAAO,EAAGC,GAAY,GACvC,IAAIC,EAAU,KAEd,OAAO,WACL,MAAMC,EAAUF,IAAcC,EACxBE,EAAO,IAAML,EAASM,MAAMxC,KAAMyC,WAExCC,aAAaL,GACbA,EAAUM,WAAWJ,EAAMJ,GAEvBG,GACFC,MAKNK,SAAQ,IACC,IAAIC,QAAQC,IACjBH,WAAWG,EAAS,KAIxBC,WAAY,CAACC,EAAMC,IAAS1B,OAAO2B,KAAKD,GAAME,OAAOpC,GAAOA,KAAOiC,GAEnE7D,gBAAgBiE,EAAUC,GACxB9B,OAAOC,QAAQ6B,GAASC,QAAQ,EAAEC,EAAMC,KAAQJ,EAASK,eAAeF,EAAMC,KAGhFrE,iBAAiBiE,EAAUM,EAAOC,GAChCpC,OAAOC,QAAQmC,GAAUL,QAAQ,EAAEC,EAAMK,MACvCR,EAASS,gBAAgBN,EAAMK,EAAQE,UAEvC,CAAC,UAAW,WAAY,QAAQR,QAAQvC,IACtC,KAAMA,KAAO6C,GAAU,OACvB,MAAMG,EAAU/D,KAAK+C,WAAWW,EAAM3C,GAAM6C,EAAQ7C,IAChDgD,EAAQjC,QAAQsB,EAASY,IAAI,EAAG,mBAAmBT,qBAAwBxC,SAAYgD,KAGzFH,EAAQK,MAAM1C,OAAO2C,OAAOR,EAAMO,KAAML,EAAQK,MAChDL,EAAQO,SAAS5C,OAAO2C,OAAOR,EAAMS,QAASP,EAAQO,SACtDP,EAAQP,SAASrD,KAAKoE,gBAAgBhB,EAAUQ,EAAQP,YAIhEgB,KAAI,CAACxD,EAAK6C,KAAUY,IACX/C,OAAO2B,KAAKrC,GAAKD,OAAO,CAAC2D,EAAOxD,KACrCwD,EAAMxD,GAAOF,EAAIE,GAAKsD,KAAKX,KAAUY,GAC9BC,GACN,IAGLC,aAAY,CAACC,EAAMC,IACVA,EAAWC,KAAKC,IACrB,GAAIH,IAASG,GAA2B,OAAdA,EAAoB,OAAO,EACrD,MAAMC,EAAWJ,EAAKK,MAAM,KAG5B,OAFkBF,EAAUE,MAAM,KAEjBC,MAAM,CAACC,EAAKC,IACvBD,IAAQH,EAASI,IAAkB,MAARD,KAMrCE,SAAU,IAAM,MAAMjG,SCrET,CACbE,OAAO8E,EAAM/B,EAAUiD,GAAW,GAChC,IAAIC,EAAM,GAEV,MAAMC,EAAaC,EAAMC,SAAS,KAChCrD,EAASkD,GACTA,EAAM,KAGFI,EAAYf,IACXW,EAAIK,SAAShB,IAAOW,EAAIM,KAAKjB,GAClCY,EAAWD,IAiCb,OA9BA,SAASO,EAAYC,EAAKC,EAAO,IAC/B,OAAO,IAAIC,MAAMF,EAAK,CACpBG,IAAK,SAAS/E,EAAQgF,GACpB,MAAMC,EAAQC,QAAQH,OAAOtD,WAE7B,OAAIwD,GAA0B,iBAAVA,GAAsB,CAAC,QAAS,UAAUR,SAASQ,EAAME,YAAY5C,MAChFoC,EAAYM,EAAOJ,EAAK5E,OAAO+E,KAElCb,GAAUK,EAAUK,EAAK5E,OAAO+E,GAAMtE,KAAK,MACxCuE,IAIXG,IAAK,SAASpF,EAAQgF,EAAMC,GAC1B,MAAMI,EAAMH,QAAQE,OAAO3D,WACrBgC,EAAOoB,EAAK5E,OAAO+E,GAAMtE,KAAK,KAEpC,OADA8D,EAAUf,GACH4B,GAGTC,eAAgB,SAAStF,EAAQgF,GAC/B,MAAMK,EAAMH,QAAQI,kBAAkB7D,WAChCgC,EAAOoB,EAAK5E,OAAO+E,GAAMtE,KAAK,KAEpC,OADA8D,EAAUf,GACH4B,KAKKV,CAAY1B,KCxClC,YAAQtF,GAAUK,EAElB,MAAe,CACbG,UAASiE,SAAEA,EAAQU,SAAEA,EAAQyC,MAAEA,EAAK7C,MAAEA,IACpCN,EAASK,eAAe,MAAOF,GAAQ,IAAIH,EAASoD,WAAW,GAAG7H,EAAMI,QAAQwE,OAChFH,EAASK,eAAe,aAAa,YAAYa,GAE/C,OADAA,EAAKmC,MACEhG,MAAMC,KAAK4D,GAAM5C,KAAK,QAG/B0B,EAASK,eAAe,MAAM,YAAYa,GACxC,MAAM1C,KAAEA,EAAI8E,IAAEA,GAAQpC,EAAKmC,MACrBtF,EAAKmE,EAAMJ,WACXyB,EAAW3G,KA0BjB,OAxBAuB,OAAOC,QAAQI,GAAM0B,QAAQ,EAAEsD,EAAWC,MAGxCvB,EAAM1C,WAAWkE,MAAK,WACpB,MAAMhG,EAAMwE,EAAMpG,IAAIgC,WAAWC,GAC5BL,IAEC+F,KAAcnD,EAAMS,SAAUf,EAASY,IAAI,EAAG,YAAY6C,sBAAgCjF,EAAMd,GAEtGA,EAAIiG,iBAAiBH,EAAWI,IAC9B,MAAMC,EAAU,CACdD,MAAAA,EACAE,KAAMxD,EAAMwD,KACZC,MAAO7B,EAAMpG,IAAIkI,SAAS/C,KAAK,KAAMX,EAAMwD,MAC3CG,UAAW/B,EAAM1C,SACjB0E,SAAU5D,EAAMO,MAGlBgD,EAAQ9C,QAAUmB,EAAMjB,KAAKX,EAAMS,QAASwC,EAAUM,GACtDA,EAAQ9C,QAAQ0C,MAAevC,WAK9B,IAAIlB,EAASoD,WAAW,GAAG7H,EAAMG,WAAWqC,SAGrDiC,EAASK,eAAe,SAAS,YAAYa,GAC3C,MAAMd,GAAEA,EAAE5B,KAAEA,GAAS0C,EAAKmC,MACpBc,EAAMjC,EAAMJ,WAElB,IAAKZ,EAAKxC,OAAQ,CAChB,MAAM0F,EAAOC,EAAUC,OACrB1H,KACA2H,IACEpB,EAAMqB,QAAQL,GAAK9C,KAAOkD,IAE5B,GAGFnE,EAAGgE,GAkBL,OAfAjB,EAAMqB,QAAQL,GAAO,CACnB9C,KAAMH,EAAKnB,OAAO0E,GAAsB,iBAARA,GAChCC,OAAQ,IAAMtE,EAAGxD,OAGnBsF,EAAM1C,WAAWkE,KAAK,KACpB,MAAMhG,EAAMwE,EAAMpG,IAAIkC,YAAYmG,GAC7BzG,IAELwD,EAAKhB,QAAQmB,IACS,iBAATA,GAAmBrB,EAASY,IAAI,EAAG,iCAAkCM,EAAMxD,KAExFsC,EAASY,IAAIhF,EAAOT,WAAY,mBAAoBgI,EAAMqB,QAAQL,GAAK9C,KAAM3D,MAGxEwE,EAAMpG,IAAI6I,YAAYR,EAAK/D,EAAGxD,MAAO4B,QC3ElD,YAAQjD,EAAKD,MAAEA,GAAUM,EAEzB,SAASgJ,EAAUC,EAAOC,GACxB,MAAMC,EAAUF,EAAMG,QAAQ1J,EAAMC,MAAO,IACrC0J,EAAUH,EAAME,QAAQ1J,EAAMC,MAAO,IAC3C,OAAO2G,EAAMpG,IAAIoJ,UAAUH,GAASI,YAAYjD,EAAMpG,IAAIoJ,UAAUD,IAGtE,MAAe,CACbG,SAAUpJ,GACRA,EAAQqJ,SAAS3G,QACjB1C,EAAQqJ,SAAS3G,OAAS,GAC1BrB,MAAMC,KAAKtB,EAAQqJ,UAAU1D,MAAMjE,GAAOA,EAAItB,aAAab,EAAMI,MAEnE2J,WAAY,CAACtJ,EAASuC,KAAUqG,EAAU5I,EAAQ6C,UAAWN,GAE7DxC,SAAQC,QAAEA,EAAOuC,KAAEA,EAAIyB,SAAEA,IACvB,MAAMuF,EAAUrD,EAAMpG,IAAIoJ,UAAU3G,GAC9BiH,EAAWnI,MAAMC,KAAKiI,EAAQF,UAC9BI,EAAQ7J,EAAOT,WAGrBkC,MAAMC,KAAKtB,EAAQqJ,UAAUnF,QAAQwF,IACnC,MAAMC,EAAKzD,EAAMpG,IAAIe,QAAQ0I,EAASG,EAAGtJ,aAAab,EAAMI,MACvDgK,EAGOf,EAAUe,EAAG9G,UAAW6G,EAAG7G,aACrCmB,EAASY,IAAI6E,EAAO,mBAAoBC,EAAIC,GAC5CD,EAAGE,YAAYD,EAAGE,WAAU,MAJ5B7F,EAASY,IAAI6E,EAAO,mBAAoBC,GACxCA,EAAGI,YAQPN,EAAStF,QAAQ,CAACyF,EAAI9D,KACTK,EAAMpG,IAAIe,QAAQb,EAAS2J,EAAGvJ,aAAab,EAAMI,QAE1DqE,EAASY,IAAI6E,EAAO,iBAAkBE,GACtC3J,EAAQ+J,OAAOJ,EAAGE,WAAU,OAKhCL,EAAStF,QAAQ,CAACyF,EAAI9D,KACpB,MAAM6D,EAAK1J,EAAQqJ,SAASxD,GACxB6D,EAAGtJ,aAAab,EAAMI,OAASgK,EAAGvJ,aAAab,EAAMI,MAAM+J,EAAGE,YAAYD,EAAGE,WAAU,UC5ClF,CACb9J,OAAMwI,MAAEA,EAAKC,QAAEA,EAAOxE,SAAEA,IACtB7B,OAAOC,QAAQoG,GACZzE,OAAO,EAAEiG,EAAUC,KACF1B,EAAMhD,KAAKF,GAAQa,EAAMd,aAAaC,EAAM4E,EAAQ5E,QAClDa,EAAMpG,IAAIkC,YAAYgI,IAEzC9F,QAAQ,EAAE8F,EAAUC,MACnB,MAAMjK,EAAUkG,EAAMpG,IAAIkC,YAAYgI,GAItC,IAAKhK,EAAS,OAEd,MAAMuC,EAAO0H,EAAQvB,SACfwB,EAAQhE,EAAMpG,IAAIqK,YAAYnK,GAEpC,OAAKoK,EAAMd,WAAWtJ,EAASuC,GAE3B6H,EAAMhB,SAASpJ,IACjBgE,EAASY,IAAIhF,EAAOT,WAAY,mBAAoB8K,EAAQ5E,KAAMrF,GAClEoK,EAAMC,QAAQ,CAAErK,QAAAA,EAASuC,KAAAA,EAAMyB,SAAAA,SAC/BkC,EAAMpG,IAAIwK,aAAatK,EAASkK,KAKlBD,EAAQ5E,KAAKkF,KAAKlF,GAAQA,EAAKmF,SAAS,aAEtDxG,EAASY,IACP,EACA,uFACAqF,EAAQ5E,KACRrF,GAGJA,EAAQM,MAAMmK,QAAmB,KAATlI,EAAc,OAAS,GAC/CvC,EAAQ6C,UAAYN,EAEpB2D,EAAMpG,IAAIwK,aAAatK,EAASkK,QAChClG,EAASY,IAAIhF,EAAOT,WAAY,iBAAkB8K,EAAQ5E,KAAMrF,SAvBhE,QCdO,CACbD,KAAIkE,QACFA,EAAU,GAAES,SACZA,EAAQG,KACRA,EAAO,GAAE6F,KACTA,EAAO,GAAE3F,QACTA,EAAU,GAAER,SACZA,EAAW,GAAE9E,MACbA,EAAQ,GAAEkL,WACVA,EAAaC,OAAOD,WAAUE,MAC9BA,GAAQ,IAER,MAAM7G,EAAW2G,EAAWrC,SACtBwC,EAAa9G,EAAS+G,QAAQrG,GAC9ByC,EAAQ,CAAEqB,QAAS,IAKzB,OAHA5I,EAAOR,SAASyL,GAChB3E,EAAMlB,gBAAgBhB,EAAUC,GAEzB,CACLkD,MAAAA,EACAnD,SAAAA,EACAjE,OAAOiL,GACL,MAAMlD,EAAO5H,SAASiB,cAAc6J,GAC9B1G,EAAQ,CACZwD,KAAAA,EACA/C,QAAAA,EACAF,KAAAA,GAGFoG,EAAQC,SAAS,CAAElH,SAAAA,EAAUU,SAAAA,EAAUyC,MAAAA,EAAO7C,MAAAA,IAC9C4B,EAAMiF,iBAAiBnH,EAAUM,EAAOC,GAGxCD,EAAMO,KAAO1C,OAAOC,QAAQkC,EAAMO,MAAMrD,OAAO,CAAC4J,GAASzJ,EAAKkF,MACvC,mBAAVA,GAAwBuE,EAAOC,eAAe1J,KAAMyJ,EAAOzJ,GAAOkF,EAAM5B,KAAKX,IACjF8G,GACNvG,GAEHP,EAAMO,KAAOwD,EAAUC,OAAOzD,EAAM0D,IAClCvE,EAASY,IAAIhF,EAAOT,WAAY,iBAAkBoJ,GAClD+C,EAAS/C,MAAM,CAAEA,MAAAA,EAAOC,QAASrB,EAAMqB,QAASxE,SAAAA,IAChD7B,OAAOC,QAAQ3C,GAAOyE,QAAQ,EAAEmB,EAAMjB,MAChCmE,EAAMhD,KAAKF,GAAQa,EAAMd,aAAaC,EAAMkD,KAASnE,EAAGmH,KAAKjH,OAIpD,IAAIkH,iBAAiBC,IACpCA,EAAavH,QAAQ,EAAGwH,WAAAA,EAAYC,aAAAA,MAClCA,EAAazH,QAAQxC,IACnB,GAAIA,EAAIkK,WAAaC,KAAKC,UAAW,OACrC,MAAMrM,EAAQiC,EAAItB,aAAaR,EAAOL,MAAME,OACxCA,UAAc0H,EAAMqB,QAAQ/I,SAK7BsM,QAAQjE,EAAM,CACrBkE,WAAW,EACXC,YAAY,EACZC,SAAS,IAGXpE,EAAKjF,UAAYiI,EAAWxG,EAAMO"}