"use strict";let e=!1;var t={logLevel:()=>e?1:0,setTrace:t=>e=t,attrs:{watch:"rbs-watch",method:"rbs-method",ref:"rbs-ref"}};const{attrs:n}=t;let o=1;var r={dom:{recordState(e){const t=document.activeElement,o=t.getAttribute(n.ref);return e.contains(t)&&o?{ref:o,scrollTop:t.scrollTop,scrollLeft:t.scrollLeft,selectionStart:t.selectionStart}:null},restoreState(e,t){if(!t)return;const n=this.findRef(e,t.ref);if(n){if(n.focus(),t.selectionStart){const e="TEXTAREA"===n.tagName?t.selectionStart:t.selectionStart+1;n.setSelectionRange(e,e)}n.scrollTop=t.scrollTop,n.scrollLeft=t.scrollLeft}},findRef:(e,t)=>e.getAttribute(n.ref)===t?e:e.querySelector(`[${n.ref}="${t}"]`),findRefs(e){const{ref:t}=n;return Array.from(e.querySelectorAll(`[${t}]`)).reduce((e,n)=>{const o=n.getAttribute(t),r=e[o];return e[o]=r?[r].concat(n):n,e},{})},findMethod:e=>document.querySelector(`[${n.method}="${e}"]`),findWatcher:e=>document.querySelector(`[${n.watch}="${e}"]`),propStr:e=>Object.entries(e).map(([e,t])=>"number"==typeof t?`${e}=${t}`:`${e}="${t}"`).join(" "),wrapWatcher(e,t,o){const{tag:r,...a}={tag:"span",...o};return`<${r} ${this.propStr(a)} ${t.length?"":"style='display:none;'"} ${n.watch}="${e}">${t}</${r}>`},getShadow(e){const t=document.createElement("div");return t.innerHTML=e,t}},debounce(e,t=0,n=!1){let o=null;return function(){const r=n&&!o,a=()=>e.apply(this,arguments);clearTimeout(o),o=setTimeout(a,t),r&&a()}},intersects:(e,t)=>Object.keys(t).filter(t=>t in e),registerHelpers(e,t){Object.entries(t).forEach(([t,n])=>e.registerHelper(t,n))},registerPartials(e,t,n){Object.entries(n).forEach(([n,o])=>{e.registerPartial(n,o.template),["methods","partials","data"].forEach(r=>{if(!(r in o))return;const a=this.intersects(t[r],o[r]);a.length&&e.log(2,`ReBars: partial ${n} has conflicting ${r} keys`,a)}),o.data&&Object.assign(o.data,t.data),o.methods&&Object.assign(t.methods,o.methods),o.helpers&&this.registerHelpers(e,o.helpers)})},bind:(e,t,...n)=>Object.keys(e).reduce((e,o)=>(e[o]=e[o].bind(t,...n),e),{...e}),shouldRender:(e,t)=>(Array.isArray(t)?t:[t]).some(t=>{if(e===t||".*"===t)return!0;const n=e.split(".");return t.split(".").every((e,t)=>e===n[t]||"*"===e)}),randomId:()=>`rbs${o++}`},a={create(e,t,n=!1){let o=[];const a=r.debounce(()=>{t(o),o=[]}),i=e=>{o.includes(e)||o.push(e),a(o)};return function e(t,o=[]){return new Proxy(t,{get:function(t,r){if("ReBarsPath"===r)return o.join(".");const a=Reflect.get(...arguments);return a&&"object"==typeof a&&["Array","Object"].includes(a.constructor.name)?e(a,o.concat(r)):(n&&i(o.concat(r).join(".")),a)},set:function(e,t){const n=Reflect.set(...arguments),r=o.concat(t).join(".");return i(r),n},deleteProperty:function(e,t){const n=Reflect.deleteProperty(...arguments),r=o.concat(t).join(".");return i(r),n}})}(e)}};const{attrs:i}=t;var s={register({instance:e,template:t,store:n,scope:o}){e.registerHelper("ref",t=>new e.SafeString(`${i.ref}="${t}"`)),e.registerHelper("buildPath",(function(...e){return e.pop(),Array.from(e).join(".")})),e.registerHelper("on",(function(...t){const{loc:n}=t.pop(),a=r.randomId(),[s,d,...l]=t,c=this;return t[1]in o.methods||e.log(3,`ReBars: "${t[1]}" is not a method. line: ${n.start.line}`),r.debounce(()=>{const e=r.dom.findMethod(a);e&&e.addEventListener(s,e=>{const t={event:e,$app:o.$app,$refs:r.dom.findRefs.bind(null,o.$app),rootData:o.data};t.methods=r.bind(o.methods,c,t),t.methods[d](...l)})})(),new e.SafeString(`${i.method}="${a}"`)})),e.registerHelper("watch",(function(...o){const i=o.pop(),{fn:s,hash:d,data:l,loc:c}=i,h=r.randomId(),u=o.map(n=>(void 0===n&&e.log(3,"undefined cannot be watched",{template:t,loc:c}),"object"==typeof n?`${n.ReBarsPath}.*`:n));if(!u.length){const e=a.create(l.root,e=>{n.renders[h].path=e},!0);s(e)}return n.renders[h]={path:u,render:()=>s(this)},r.dom.wrapWatcher(h,s(this),d)}))}};const d=t.attrs.ref;function l(e,t){const n=new RegExp(/rbs-(.*?)="(.*?)"/g);return e.replace(n,"")===t.replace(n,"")}var c={canPatch:e=>e.children.length&&e.children.length>1&&Array.from(e.children).every(e=>e.getAttribute(d)),hasChanged:(e,t)=>!l(e.innerHTML,t),compare({app:e,$target:t,html:n}){const o=r.dom.getShadow(n),a=Array.from(o.children);Array.from(t.children).forEach(e=>{const t=r.dom.findRef(o,e.getAttribute(d));t?l(t.innerHTML,e.innerHTML)||e.replaceWith(t.cloneNode(!0)):e.remove()}),a.forEach((e,n)=>{r.dom.findRef(t,e.getAttribute(d))||function(e,t,n=0){n>=e.children.length?e.appendChild(t):e.insertBefore(t,e.children[n])}(t,e.cloneNode(!0),n)}),a.forEach((e,n)=>{const o=t.children[n];o.getAttribute("ref")!==e.getAttribute(d)&&o.replaceWith(e.cloneNode(!0))})}},h={paths({paths:e,renders:n,instance:o}){Object.entries(n).filter(([t,n])=>e.some(e=>r.shouldRender(e,n.path))&&r.dom.findWatcher(t)).forEach(([e,n])=>{const a=r.dom.findWatcher(e);if(!a)return;const i=n.render(),s=r.dom.recordState(a);c.hasChanged(a,i)&&(n.path.find(e=>e.endsWith(".length"))&&o.log(2,`patching "${n.path}" add a ref="someUniqueKey" to each to avoid re-rendering the entire Array of elements`,a),a.style.display=""===i?"none":"",a.innerHTML=i,r.dom.restoreState(a,s),o.log(t.logLevel(),"ReBars: render",n.path,a))})}},u={app({helpers:e={},template:n,data:o={},refs:i={},methods:d={},partials:l={},Handlebars:c=window.Handlebars,trace:u=!1}){const p=c.create(),m=p.compile(n),f={renders:{}};return t.setTrace(u),r.registerHelpers(p,e),{store:f,instance:p,render(e){const i={$app:e,methods:d,data:o};s.register({instance:p,template:n,store:f,scope:i}),r.registerPartials(p,i,l),i.data=Object.entries(i.data).reduce((e,[t,n])=>("function"==typeof n&&e.hasOwnProperty(t)&&(e[t]=n.bind(i)),e),o),i.data=a.create(o,e=>{p.log(t.logLevel(),"ReBars: change",e),h.paths({paths:e,renders:f.renders,instance:p})}),new MutationObserver(e=>{e.forEach(({addedNodes:e,removedNodes:n})=>{n.forEach(e=>{if(e.nodeType===Node.TEXT_NODE)return;const n=e.getAttribute(t.attrs.watch);n&&delete f.renders[n]})})}).observe(e,{childList:!0,attributes:!0,subtree:!0}),e.innerHTML=m(i.data)}}}},p={template:'\n  <div>\n    <div class="header-container">\n      <h1>\n        {{#watch}}\n          <span>{{ header.title }}</span>\n          <small>{{ header.description }}</small>\n        {{/watch}}\n      </h1>\n\n      <label>\n        Title:\n        <input\n          type="text"\n          value="{{ header.title }}"\n          {{ on "input" "updateTitle" }}\n        />\n      </label>\n\n      <label>\n        Description:\n        <input\n          type="text"\n          value="{{ header.description }}"\n          {{ on "input" "updateDescription" }}\n        />\n      </label>\n    </div>\n\n    <ul class="simple">\n      {{#watch "todos.*" }}\n        {{#each todos }}\n          <li {{ ref id }}>\n            <div class="todo">\n              <label>\n                <input\n                  type="checkbox"\n                  {{ on "click" "toggleDone" id done }}\n                  {{ isChecked done }}\n                />\n                {{#if done }}\n                  <s>{{ name }}</s>\n                {{else}}\n                  <strong>{{ name }}</strong>\n                {{/if}}\n              </label>\n\n              <div class="actions">\n                <button {{ on "click" "deleteTodo" id }}>\n                  delete\n                </button>\n              </div>\n            </div>\n          </li>\n        {{/each}}\n      {{/watch}}\n    </ul>\n\n    {{#watch}}\n      {{#if adding }}\n        <form>\n          <input type="text" {{ ref "newName" }} placeholder="the new todo" />\n          <button {{ on "click" "addItem" }}>Add todo</button>\n          <button {{ on "click" "toggleCreate" }}>Cancel</button>\n        </form>\n      {{else}}\n        <button {{ on "click" "toggleCreate" }}>Add another</button>\n      {{/if}}\n    {{/watch}}\n  </div>\n  ',trace:!0,data:{adding:!1,header:{title:"Todos",description:"some things that need done"},todos:[{done:!1,name:"Grocery Shopping",id:22},{done:!0,name:"Paint the House",id:44}]},helpers:{isChecked:e=>e?"checked":""},methods:{updateTitle(e){this.data.header.title=e.target.value},updateDescription(e){this.data.header.description=e.target.value},addItem(e){e.preventDefault();const t=this.$refs().newName;this.data.todos.push({id:(new Date).getTime(),name:t.value}),t.value=""},findTodo(e){return this.data.todos.findIndex(t=>t.id===parseInt(e))},deleteTodo(e,t){const n=this.methods.findTodo(t);this.data.todos.splice(n,1)},toggleDone(e,t,n){this.data.todos[this.methods.findTodo(t)].done=!n},toggleCreate(e){e.preventDefault(),this.data.adding=!this.data.adding}}},m={template:'\n  <div>\n    {{#watch}}\n      {{#if isAdding }}\n        <form>\n          <input type="text" {{ ref "newName" }} placeholder="the new todo" />\n          <button {{ on "click" "addItem" }}>Add todo</button>\n          <button {{ on "click" "toggleAdd" }}>Cancel</button>\n        </form>\n      {{ else }}\n        <button {{ on "click" "toggleAdd" }}>Add another</button>\n      {{/if}}\n    {{/watch}}\n  </div>',methods:{toggleAdd({event:e,methods:t}){e.preventDefault(),this.isAdding=!this.isAdding},addItem({event:e,methods:t,$refs:n}){e.preventDefault();const o=n().newName;this.todos.push({name:o.value,id:(new Date).getTime(),updated:(new Date).toLocaleString()}),this.filters.filterBy=null,o.value="",o.focus(),t.saveLocal()}}},f={template:'\n    <li {{ ref todo.id }} {{ on "keyup" "saveIfEnter" }}>\n      {{#watch (buildPath "todos" @index "*") tag="div" class="todo" }}\n\n        {{#if todo.isEditing }}\n          <input type="text"\n            value="{{ todo.name }}"\n            {{ ref "editInput" }}\n            {{ on "input" "updateText" }}\n          />\n          <button {{ on "click" "closeEdit" }}>done</button>\n        {{ else }}\n\n          <label>\n            <input type="checkbox" {{ isChecked }} {{ on "click" "toggleDone" }} />\n            {{#if todo.done }}\n              <s>{{ todo.name }}</s>\n            {{else}}\n              <strong>{{ todo.name }}</strong>\n            {{/if}}\n          </label>\n\n          <div class="actions">\n            <span class="date">{{ timeAgo }}</span>\n            <button {{ on "click" "remove" }}>delete</button>\n            <button {{ on "click" "edit" }}>edit</button>\n          </div>\n        {{/if}}\n      {{/watch}}\n    </li>\n  ',helpers:{isChecked(){return this.todo.done?"checked":""},timeAgo(){return window.moment(this.todo.updated).fromNow()}},methods:{remove({methods:e,rootData:t}){const n=t.todos.findIndex(e=>e.id===this.id);t.todos.splice(n,1),e.saveLocal()},saveIfEnter({event:e,methods:t}){"Enter"===e.code&&t.closeEdit()},updateText({event:e,methods:t}){this.todo.name=e.target.value,this.updatedAt=(new Date).toLocaleString(),t.saveLocal()},closeEdit(){delete this.todo.isEditing},edit({rootData:e}){this.todo.isEditing=!0},toggleDone({methods:e}){this.todo.done=!this.todo.done,e.saveLocal()}}},g={template:'\n    <div class="filters">\n      <div>\n        {{#watch "filters.filterBy" }}\n          <button {{ disabledIf "completed" }} {{ on "click" "filterBy" "completed" }}>Show Completed</button>\n          <button {{ disabledIf "incomplete" }} {{ on "click" "filterBy" "incomplete" }}>Show Incompleted</button>\n          <button {{ disabledIf null }} {{ on "click" "filterBy" null }}>Show All</button>\n        {{/watch}}\n      </div>\n\n      <div>\n        <select {{ on "change" "sortBy" }}>\n          <option {{ selectedSort "name" }} value="name">Sort by Name</option>\n          <option {{ selectedSort "updated" }} value="updated">Sort by Updated at</option>\n        </select>\n\n        <select {{ on "change" "sortDir" }}>\n          <option {{ selectedDir "asc" }} value="asc">Ascending</option>\n          <option {{ selectedDir "desc" }} value="desc">Descending</option>\n        </select>\n      </div>\n    </div>\n  ',helpers:{selectedSort(e){return this.filters.sortBy===e?"selected":""},selectedDir(e){return this.filters.sortDir===e?"selected":""},disabledIf(e){return this.filters.filterBy===e?"disabled":""}},methods:{sortBy({methods:e,event:t}){this.filters.sortBy=t.target.value,e.sort()},sort({methods:e}){this.todos.sort((e,t)=>"name"===this.filters.sortBy?e.name.localeCompare(t.name):new Date(e.updated).getTime()-new Date(t.updated).getTime()),"desc"===this.filters.sortDir&&this.todos.reverse(),e.saveLocal()},sortDir({event:e,methods:t}){this.filters.sortDir=e.currentTarget.value,t.sort()},filterBy({methods:e},t){this.filters.filterBy=t,e.saveLocal()}}};const v=window.localStorage.getItem("rebars-todo");var b={template:'\n    <div class="header-container">\n      {{#watch tag="h1" }}\n        <span>{{ header.title }}</span>\n        <small>{{ header.description }}</small>\n      {{/watch}}\n\n      <label>\n        Title:\n        <input type="text" value="{{ header.title }}" {{ on "input" "updateTitle" }} />\n      </label>\n\n      <label>\n        Description:\n        <input type="text" value="{{ header.description }}" {{ on "input" "updateDescription" }} />\n      </label>\n    </div>\n\n    {{> Filters }}\n\n    {{#watch "filters.*" "todos.length" "todos.*.done" tag="ul"}}\n      {{#each todos as | todo | }}\n        {{#notFilteredOut }}\n          {{> Todo todo=todo }}\n        {{/notFilteredOut}}\n      {{/each}}\n    {{/watch}}\n\n    {{> Add }}\n  ',trace:!0,helpers:{notFilteredOut({data:e,fn:t,inverse:n}){const o=e.root.filters.filterBy;return o?"incomplete"===o?this.done?n(this):t(this):void 0:t(this)}},data:(v?JSON.parse(v):null)||{header:{title:"ReBars Todos",description:"Some things that need done"},isAdding:!1,filters:{filterBy:null,sortBy:"name",sortDir:"asc"},todos:[{done:!1,name:"Wash the car",updated:"3/1/2020, 12:37:10 PM",id:21},{done:!0,name:"Shopping for groceries",updated:"2/27/2020, 2:37:10 PM",id:22},{done:!1,name:"Code some Javascript",updated:"1/27/2020, 9:37:10 AM",id:23},{done:!0,name:"Go for a run",updated:"1/15/2020, 10:37:10 PM",id:24}]},partials:{Todo:f,Filters:g,Add:m},methods:{saveLocal({rootData:e}){window.localStorage.setItem("rebars-todo",JSON.stringify(e))},updateTitle({event:e,methods:t}){this.header.title=e.target.value,t.saveLocal()},updateDescription({event:e,methods:t}){this.header.description=e.target.value,t.saveLocal()}}},y={template:'\n    <h3>\n      Button have been clicked\n      {{#watch}}\n        {{ clicked }}\n      {{/watch}}\n\n      <button rbs-method="click:incriment">\n        Click Me\n      </button>\n    </h3>\n  ',data:{clicked:0},trace:!0,methods:{incriment(){this.data.clicked++}}};window.Prism=window.Prism||{},window.Prism.manual=!0,u.app({$el:document.getElementById("demo-app-simple"),root:p}),u.app({$el:document.getElementById("demo-app-advanced"),root:b}),u.app({$el:document.getElementById("counter-demo"),root:y}),document.querySelectorAll(".language-html").forEach(e=>{e.innerText.includes("<script src")||(e.classList.remove("language-html"),e.classList.add("language-handlebars"))}),Prism.highlightAll(),Array.from(document.querySelectorAll("code.language-javascript .token.string")).filter(e=>e.innerText.trim().startsWith("<")&&e.innerText.trim().endsWith(">")).forEach(e=>{e.innerHTML=Prism.highlight(e.innerText,Prism.languages.handlebars,"handlebars")}),document.querySelectorAll("nav.tabs button").forEach(e=>{const t=e.parentElement.querySelectorAll("*"),n=e.parentElement.parentElement.querySelectorAll(".tab-content *");e.addEventListener("click",o=>{o.preventDefault(),t.forEach(e=>e.classList.remove("active")),n.forEach(e=>e.classList.remove("active")),e.classList.add("active"),document.getElementById(e.dataset.target).classList.add("active")})}),function(){const e=new IntersectionObserver(e=>{e.forEach(e=>{const t=e.target.getAttribute("id")||e.target.dataset.anchor,n=document.querySelector(`.side-bar-nav a[href="#${t}"]`);n&&(e.intersectionRatio>0?n.classList.add("active"):n.classList.remove("active"))})});document.querySelectorAll(" h1[id],h2[id],div[id],div[data-anchor]").forEach(t=>{e.observe(t)})}();
