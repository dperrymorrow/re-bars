"use strict";const e={warn:"background: #484915; color: #ffffbe; padding: .1em; font-weight: normal;",log:"background: #324645; color:#c9faff; padding: .1em; font-weight: normal;"},t=(t,n,...o)=>{let a=n;if("object"==typeof o[0]&&"template"in o[0]&&"loc"in o[0]&&(o[0]=(({template:e,loc:t})=>{const n=e.split("\n").slice(t.start.line-1,t.end.line),o=Array(n[0].length-n[0].trim().length).join(" ");return n[0]=n[0].substr(t.start.column),n[n.length-1]=n[n.length-1].substr(0,t.end.column),["",`template line: ${t.start.line}`,"============================================"].concat(n.map(e=>e.replace(o,""))).join("\n")})(o[0])),!["warn","log"].includes(t))throw o.forEach(e=>console.error(e)),new Error(a);a="%c "+a+" ",window.ReBars&&window.ReBars.trace&&(o?(console.groupCollapsed(a,e[t]),o.forEach(e=>console.log(e)),console.groupEnd()):console.log(a,e[t]))};var n={warn:t.bind(null,"warn"),fail:t.bind(null,"throw"),log:t.bind(null,"log")};let o=1;var a={dom:{tagComponent(e,t,o){const a=this.getShadow(t),r=a.firstElementChild;(!r||!a.children||a.children.length>1||r.dataset.rbsWatch)&&n.fail("oneRoot",{name:o},a),r.dataset.rbsComp=e;const d=a.innerHTML;return a.remove(),d},restoreCursor(e,t){const o=this.findRef(e,t.ref);o&&(Array.isArray(o)?n.warn(`ref="${t.ref}" is used more than once. Focus cannot be restored. If using bind, add a ref="uniqeName" to each usage`,o):(o.focus(),t.pos&&o.setSelectionRange(t.pos+1,t.pos+1)))},findComponent:e=>document.querySelector(`[data-rbs-comp="${e}"]`),findRef:(e,t)=>e.getAttribute("ref")===t?e:e.querySelector(`[ref="${t}"]`),findRefs(e){const t=this.findComponent(e),n=Array.from(t.querySelectorAll("[ref]"));return t.getAttribute("ref")&&n.push(t),n.reduce((e,t)=>{const n=t.getAttribute("ref"),o=e[n];return e[n]=o?[o].concat(t):t,e},{})},findWatcher:e=>document.querySelector(`[data-rbs-watch="${e}"]`),propStr:e=>Object.entries(e).map(([e,t])=>`${e}="${t}"`).join(" "),wrapWatcher(e,t,n){const{tag:o,...a}={tag:"span",...n};return`<${o} ${this.propStr(a)} ${t.length?"":"style='display:none;'"} data-rbs-watch="${e}">${t}</${o}>`},getShadow(e){const t=document.createElement("div");return t.innerHTML=e,t}},stringify:(e,t=2)=>JSON.stringify(e,(e,t)=>"function"==typeof t?t+"":t,t),debounce(e,t=0,n=!1){let o=null;return function(){const a=n&&!o,r=()=>e.apply(this,arguments);clearTimeout(o),o=setTimeout(r,t),a&&r()}},shouldRender:(e,t)=>(Array.isArray(t)?t:[t]).some(t=>{if(e===t||".*"===t)return!0;const n=e.split(".");return t.split(".").every((e,t)=>e===n[t]||"*"===e)}),randomId:()=>`rbs${o++}`,setKey(e,t,o){const a=t.split(".");a.reduce((r,d,s)=>(d in r||n.fail(`${t} was not found in object!`,e),s+1===a.length&&(r[d]=o),r[d]),e)}},r={create(e,t){let n=[];const o=a.debounce(()=>{t(n),n=[]}),r=e=>{n.push(e),o(n)};const d=function e(t,n=[]){return new Proxy(t,{get:function(t,o){if("ReBarsPath"===o)return n.join(".");const a=Reflect.get(...arguments);return"function"==typeof a&&t.hasOwnProperty(o)?a.bind(d):null!==a&&"object"==typeof a&&"methods"!==o?e(a,n.concat(o)):a},set:function(e,t){const o=Reflect.set(...arguments),a=n.concat(t).join(".");return r(a),o},deleteProperty:function(e,t){const o=Reflect.deleteProperty(...arguments),a=n.concat(t).join(".");return r(a),o}})}(e);return d}},d={register({app:e,instance:t,components:o,helpers:r,template:d,methods:s,name:i}){Object.entries(r).forEach(([e,n])=>t.registerHelper(e,n)),t.registerHelper("isComponent",e=>Object.keys(o).includes(e)),t.registerHelper("component",(function(...e){const{hash:a,loc:r}=e.pop(),s=e[0];return o[s]||n.fail(`${i}: child component "${s}" is not registered`,{template:d,loc:r}),new t.SafeString(o[s].instance(a).render())})),t.registerHelper("debug",(e,{hash:o,data:r,loc:s})=>(void 0===e&&n.fail(`${i}: undefined passed to debug`,{template:d,loc:s}),new t.SafeString(`<pre class="debug" ${a.dom.propStr(o)}>${a.stringify(e)}</pre>`))),t.registerHelper("watch",(function(...t){const{fn:o,hash:r,data:s,loc:l}=t.pop(),c=s.root.$_componentId,p=a.randomId(),h=t.map(e=>((e,t=!0)=>(void 0===e&&n.fail(`${i}: undefined cannot be watched`,{template:d,loc:l}),"object"==typeof e?`${e.ReBarsPath}${t?".*":""}`:e))(e,!1)).join(".").split(",");return e.components.instances[c].renders[p]={path:h,render:()=>o(this)},a.dom.wrapWatcher(p,o(this),r)})),t.registerHelper("method",(function(){const[e,...o]=arguments,[r,l="click"]=e.split(":"),{data:c,loc:p}=o.pop();r in s||n.fail(`${i}: "${r}" is not a method in component`,{template:d,loc:p});const h={"data-rbs-method":[c.root.$_componentId,l,r]};return o&&o.length&&(h["data-rbs-method"]=h["data-rbs-method"].concat(o)),new t.SafeString(a.dom.propStr(h))})),t.registerHelper("bound",(e,{hash:o={},data:r,loc:d})=>{const{$_componentId:s}=r.root,i=[s,e];let l;try{l=e.includes(".")?e.split(".").reduce((e,t)=>e[t],r.root):r.root[e]}catch(t){n.fail("badPath",{path:e})}const c={value:l,ref:o.ref||e,"data-rbs-bound":i};return new t.SafeString(a.dom.propStr(c))})}};function s(e,t){const n=new RegExp(/data-rbs(.*?)="(.*?)"/g);return e.replace(n,"")===t.replace(n,"")}var i={canPatch:e=>e.children.length&&Array.from(e.children).every(e=>e.getAttribute("ref")),hasChanged:(e,t)=>!s(e.innerHTML,t),compare({app:e,$target:t,html:n}){const o=a.dom.getShadow(n),r=Array.from(o.children);Array.from(t.children).forEach(e=>{const t=a.dom.findRef(o,e.getAttribute("ref"));t?s(t.innerHTML,e.innerHTML)||e.replaceWith(t.cloneNode(!0)):e.remove()}),r.forEach((e,n)=>{a.dom.findRef(t,e.getAttribute("ref"))||function(e,t,n=0){n>=e.children.length?e.appendChild(t):e.insertBefore(t,e.children[n])}(t,e.cloneNode(!0),n)}),r.forEach((e,n)=>{const o=t.children[n];o.getAttribute("ref")!==e.getAttribute("ref")&&o.replaceWith(e.cloneNode(!0))})}},l={paths({app:e,paths:t,renders:o,name:r}){Object.entries(o).filter(([e,n])=>t.some(e=>a.shouldRender(e,n.path))&&a.dom.findWatcher(e)).forEach(([t,o])=>{const d=a.dom.findWatcher(t),s=o.render();if(!i.hasChanged(d,s))return;if(i.canPatch(d))return i.compare({app:e,$target:d,html:s}),void n.log(`${r}: patching ${o.path}`,d);o.path.find(e=>e.endsWith(".length"))&&n.warn(`${r}: patching "${o.path}" add a ref="someUniqueKey" to each to avoid re-rendering the entire Array of elements`,d);const l={ref:document.activeElement.getAttribute("ref"),pos:document.activeElement.selectionStart};d.style.display=""===s?"none":"",d.innerHTML=s,a.dom.restoreCursor(d,l),n.log(`${r}: re-rendering watch block for ${o.path}`,d)}),e.deleteOrphans()}};const c=["component","ref","debug","isComponent","method","bound","watch","isComponent"];var p={register:function e({id:t,Handlebars:o,trace:s,helpers:i,components:p},{name:h,template:m,data:u=(()=>({})),helpers:f={},hooks:g={},methods:b={},watchers:v={},components:w=[]}){const y=arguments[0];h||n.fail("Every ReBars component should have a name!",y),"function"!=typeof u&&n.fail(`${h}: component data must be a function`,y),"string"!=typeof m&&n.fail("`${name}: needs a template string`",y);const $=arguments[0],A=o.create(),E=A.compile(m),S=w.reduce((t,n)=>{const o=e($,n);return t[n.name]=o,t},{...p.registered});return Object.keys(u()).forEach(e=>{c.concat(Object.keys(f)).includes(e)&&n.fail(`${h}: cannot use "${e}" in your data as it's defined as a helper`,y)}),d.register({app:$,methods:b,instance:A,name:h,helpers:{...f,...i},components:S,template:m}),{instance(e={}){const t=a.randomId(),o=u(),d={};Object.entries(e).forEach(([e,t])=>{void 0===t&&n.warn(`${h} was passed $prop "${e}" as undefined. If you really meant to, pass null instead.`)});const s=r.create({...o,$props:e,$methods:b,$name:h,$_componentId:t,$el:()=>a.dom.findComponent(t),$refs:()=>a.dom.findRefs(t)},e=>{n.log(`${h}: data changed "${e}"`,d),l.paths({app:$,paths:e,renders:d,name:h})});g.created&&g.created.call(s);const i={id:t,scope:s,hooks:g,renders:d,handlers:{bound(e){const[t,n]=e.target.dataset.rbsBound.split(",");a.setKey(s,n,e.target.value)},method(e){const[t,n,o,...a]=e.target.dataset.rbsMethod.split(",");s.$methods[o](e,...a)}},detached(){g.detached&&g.detached.call(s)},attached(){g.attached&&g.attached.call(s)},render:()=>a.dom.tagComponent(t,E(s),h)};return $.components.instances[t]=i,i}}}},h={app({$el:e,root:t,Handlebars:o=window.Handlebars,helpers:r={},components:d=[],trace:s=!1}){o||n.fail("noHbs"),document.body.contains(e)||n.fail("$el passed to ReBars app is either undefined or not present in the document.");const i={id:a.randomId(),Handlebars:o,trace:s,listening:!0,helpers:r,$el:e,deleteOrphans:a.debounce(()=>{Object.keys(i.components.instances).forEach(e=>{a.dom.findComponent(e)||delete i.components.instances[e]})}),components:{registered:{},instances:{}}};function l(e,t){const n="add"===e?"attached":"detached",o=t.dataset.rbsComp;i.components.instances[o][n]()}function c(e,t){const n="add"===e?"addEventListener":"removeEventListener",[o,a]=t.dataset.rbsMethod.split(",");t[n](a,i.components.instances[o].handlers.method)}function h(e,t){const n="add"===e?"addEventListener":"removeEventListener",[o,a]=t.dataset.rbsBound.split(",");t[n]("input",i.components.instances[o].handlers.bound)}return i.components.registered=d.reduce((e,t)=>(e[t.name]=p.register(i,t),e),{}),new MutationObserver(e=>{e.forEach(({addedNodes:e,removedNodes:t})=>{e.forEach(e=>{e.nodeType!==Node.TEXT_NODE&&(e.dataset.rbsComp&&l("add",e),e.dataset.rbsMethod&&c("add",e),e.dataset.rbsBound&&h("add",e),e.querySelectorAll("[data-rbs-comp]").forEach(l.bind(null,"add")),e.querySelectorAll("[data-rbs-method]").forEach(c.bind(null,"add")),e.querySelectorAll("[data-rbs-bound]").forEach(h.bind(null,"add")))}),t.forEach(e=>{e.nodeType!==Node.TEXT_NODE&&(e.dataset.rbsMethod&&c("remove",e),e.dataset.rbsBound&&h("remove",e),e.dataset.rbsComp&&l("remove",e),e.querySelectorAll("[data-rbs-method]").forEach(c.bind(null,"remove")),e.querySelectorAll("[data-rbs-bound]").forEach(h.bind(null,"remove")),e.querySelectorAll("[data-rbs-comp]").forEach(l.bind(null,"remove")))})})}).observe(e,{childList:!0,attributes:!0,subtree:!0}),e.innerHTML=p.register(i,t).instance().render(),i}},m={template:'\n  <div>\n    <div class="header-container">\n      <h1>\n        {{#watch header }}\n          <span>{{ header.title }}</span>\n          <small>{{ header.description }}</small>\n        {{/watch}}\n      </h1>\n\n      <label>\n        Title:\n        <input type="text" {{ bound "header.title" }}/>\n      </label>\n\n      <label>\n        Description:\n        <input type="text" {{ bound "header.description" }}/>\n      </label>\n    </div>\n\n    <ul class="simple">\n      {{#watch "todos.*" }}\n        {{#each todos }}\n          <li ref="{{ id }}">\n            <div class="todo">\n              <label>\n                <input type="checkbox" {{ isChecked done }} {{ method "toggleDone" id }} />\n                {{#if done }}\n                  <s>{{ name }}</s>\n                {{else}}\n                  <strong>{{ name }}</strong>\n                {{/if}}\n              </label>\n\n              <div class="actions">\n                <button {{ method "deleteTodo" id }}>delete</button>\n              </div>\n            </div>\n          </li>\n        {{/each}}\n      {{/watch}}\n    </ul>\n\n    {{#watch "adding" }}\n      {{#if adding }}\n        <form>\n          <input type="text" name="name" ref="newName" placeholder="the new todo" />\n          <button class="push" {{ method "addItem" }}>Add todo</button>\n          <button class="cancel" {{ method "toggleCreate" }}>Cancel</button>\n        </form>\n      {{else}}\n        <button class="add" {{ method "toggleCreate" }}>Add another</button>\n      {{/if}}\n    {{/watch}}\n  </div>\n  ',data:()=>({adding:!1,header:{title:"Todos",description:"some things that need done"},todos:[{done:!1,name:"Grocery Shopping",id:22},{done:!0,name:"Paint the House",id:44}]}),name:"DemoApp",helpers:{isChecked:e=>e?"checked":""},methods:{addItem(e){e.preventDefault();const t=this.$refs().newName;this.todos.push({id:(new Date).getTime(),name:t.value}),t.value=""},deleteTodo(e,t){const n=this.todos.findIndex(e=>e.id===t);this.todos.splice(n,1)},toggleDone(e,t){const n=this.todos.find(e=>e.id===t);n.done=!n.done},toggleCreate(e){e.preventDefault(),this.adding=!this.adding}}},u={template:'\n  <div>\n    <div class="header-container">\n      {{#watch "header.*" tag="h1" }}\n        <span>{{ header.title }}</span>\n        <small>{{ header.description }}</small>\n      {{/watch}}\n\n      <label>\n        Title:\n        <input type="text" {{ bound "header.title" }}/>\n      </label>\n\n      <label>\n        Description:\n        <input type="text" {{ bound "header.description" }}/>\n      </label>\n    </div>\n\n    {{ component "filters" filters=filters }}\n\n    {{#watch "filters.*,todos.*" tag="ul"}}\n      {{#each filteredTodos as | todo | }}\n        <li ref="{{ todo.id }}">\n          {{\n            component "Todo"\n            todo=todo\n            index=@index\n            deleteTodo=@root.$methods.deleteTodo\n          }}\n        </li>\n      {{/each}}\n    {{/watch}}\n\n    {{\n      component "AddTodo"\n      addTodo=$methods.addTodo\n    }}\n  <div>\n  ',name:"DemoApp",data:()=>({filteredTodos(){let e=this.todos.concat();"incomplete"===this.filters.state?e=this.todos.filter(e=>!e.done):"completed"===this.filters.state&&(e=this.todos.filter(e=>e.done));const t=e.sort((e,t)=>"name"===this.filters.sortBy?e.name.localeCompare(t.name):new Date(e.updated).getTime()-new Date(t.updated).getTime());return"asc"===this.filters.sortDir?t:t.reverse()},filters:{state:null,sortBy:"name",sortDir:"asc"},header:{title:"ReBars Todos",description:"Some things that need done"},todos:[{done:!1,name:"Wash the car",updated:"3/1/2020, 12:37:10 PM",id:21},{done:!0,name:"Shopping for groceries",updated:"2/27/2020, 2:37:10 PM",id:22},{done:!1,name:"Code some Javascript",updated:"1/27/2020, 9:37:10 AM",id:23},{done:!0,name:"Go for a run",updated:"1/15/2020, 10:37:10 PM",id:24}]}),components:[{template:'\n  <div>\n    {{#watch "isAdding" }}\n      {{#if isAdding }}\n        <form>\n          {{#watch "newName" }}\n            <h3>{{ newName }}</h3>\n            <input type="text" {{ bound "newName" }} placeholder="the new todo" />\n          {{/watch}}\n\n          <button class="push" {{ method "addItem" }}>Add todo</button>\n          <button class="cancel" {{ method "toggleAdd" }}>Cancel</button>\n        </form>\n      {{ else }}\n        <button class="add" {{ method "toggleAdd" }}>Add another</button>\n      {{/if}}\n    {{/watch}}\n  </div>\n  ',name:"AddTodo",data:()=>({isAdding:!1,hasError:!1,newName:""}),methods:{toggleAdd(e){e.preventDefault(),this.isAdding=!this.isAdding},addItem(e){e.preventDefault(),this.$props.addTodo(this.newName),this.newName=""}}},{template:'\n    <div>\n      {{#watch "editing" tag="div" class="todo" }}\n        {{#if editing}}\n          <input type="text" value="{{ $props.todo.name }}" ref="nameInput"/>\n          <button {{ method "save" }}>save</button>\n        {{ else }}\n          <label>\n            <input type="checkbox" {{ isChecked $props.todo.done }} {{ method "toggleDone" }} />\n            {{#if $props.todo.done }}\n              <s>{{ $props.todo.name }}</s>\n            {{else}}\n              <strong>{{ $props.todo.name }}</strong>\n            {{/if}}\n          </label>\n\n          <div class="actions">\n            <span class="date">{{ timeAgo todo.updated }}</span>\n            <button {{ method "remove" }}>delete</button>\n            <button {{ method "toggleEditing" }}>edit</button>\n          </div>\n        {{/if}}\n      {{/watch}}\n    </div>\n  ',name:"Todo",data:()=>({editing:!1}),helpers:{isChecked:e=>e?"checked":"",timeAgo:e=>window.moment(e).fromNow()},methods:{save(){this.$props.todo.name=this.$refs().nameInput.value,this.$props.todo.updated=(new Date).toLocaleString(),this.editing=!1},remove(){this.$props.deleteTodo(this.$props.todo.id)},toggleEditing(){this.editing=!this.editing},toggleDone(){this.$props.todo.done=!this.$props.todo.done}}},{template:'\n    <div class="filters">\n      {{#watch "$props.filters.state" tag="div" }}\n        <button {{ disabledIf "completed" }} {{ method "filterBy" "completed" }}>Show Completed</button>\n        <button {{ disabledIf "incomplete" }} {{ method "filterBy" "incomplete" }}>Show Incompleted</button>\n        <button {{ disabledIf null }} {{ method "filterBy" null }}>Show All</button>\n      {{/watch}}\n\n      {{#watch "$props.filters.sortBy,$props.filters.sortDir" tag="div" }}\n        <select {{ bound "$props.filters.sortBy" }}>\n          <option {{ selectedIf $props.filters.sortBy "name" }} value="name">Sort by Name</option>\n          <option {{ selectedIf $props.filters.sortBy "updated" }} value="updated">Sort by Updated at</option>\n        </select>\n\n        <select {{ bound "$props.filters.sortDir" }}>\n          <option {{ selectedIf $props.filters.sortDir "asc" }} value="asc">Ascending</option>\n          <option {{ selectedIf $props.filters.sortDir "desc" }} value="desc">Descending</option>\n        </select>\n      {{/watch}}\n    </div>\n  ',name:"filters",helpers:{selectedIf:(e,t)=>e===t?"selected":"",disabledIf:(e,{data:t})=>t.root.$props.filters.state===e?"disabled":""},methods:{filterBy(e,t){this.$props.filters.state=t}}}],methods:{addTodo(e){this.todos.push({name:e,id:(new Date).getTime(),updated:(new Date).toLocaleString()}),this.filters.state=null},deleteTodo(e){const t=this.todos.findIndex(t=>t.id===e);this.todos.splice(t,1)},showAdd(e){e.preventDefault(),this.uiState.adding=!0}}},f={template:'\n    <h3>\n      Button have been clicked\n        {{#watch "clicked" }}\n          <span>{{ clicked }}</span>\n          {{ pluralize "time" clicked }}\n        {{/watch}}\n      <button {{ method "step" }}>Click Me</button>\n    </h3>\n  ',name:"counter",data:()=>({clicked:0}),helpers:{pluralize:(e,t)=>1==t?e:`${e}s`},methods:{step(){this.clicked++}}};window.Prism=window.Prism||{},window.Prism.manual=!0,h.app({$el:document.getElementById("demo-app-simple"),root:m}),h.app({$el:document.getElementById("demo-app-advanced"),root:u}),h.app({$el:document.getElementById("counter-demo"),root:f}),document.querySelectorAll(".language-html").forEach(e=>{e.innerText.includes("<script src")||(e.classList.remove("language-html"),e.classList.add("language-handlebars"))}),Prism.highlightAll(),Array.from(document.querySelectorAll("code.language-javascript .token.string")).filter(e=>e.innerText.trim().startsWith("<")&&e.innerText.trim().endsWith(">")).forEach(e=>{e.innerHTML=Prism.highlight(e.innerText,Prism.languages.handlebars,"handlebars")}),document.querySelectorAll("nav.tabs button").forEach(e=>{const t=e.parentElement.querySelectorAll("*"),n=e.parentElement.parentElement.querySelectorAll(".tab-content *");e.addEventListener("click",o=>{o.preventDefault(),t.forEach(e=>e.classList.remove("active")),n.forEach(e=>e.classList.remove("active")),e.classList.add("active"),document.getElementById(e.dataset.target).classList.add("active")})}),function(){const e=new IntersectionObserver(e=>{e.forEach(e=>{const t=e.target.getAttribute("id")||e.target.dataset.anchor,n=document.querySelector(`.side-bar-nav a[href="#${t}"]`);n&&(e.intersectionRatio>0?n.classList.add("active"):n.classList.remove("active"))})});document.querySelectorAll(" h1[id],h2[id],div[id],div[data-anchor]").forEach(t=>{e.observe(t)})}();
