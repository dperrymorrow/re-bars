"use strict";const e={warn:"background: #484915; color: #ffffbe; padding: .1em; font-weight: normal;",log:"background: #324645; color:#c9faff; padding: .1em; font-weight: normal;"},t=(e,{loc:t,data:n})=>{const o=e.split("\n").slice(t.start.line-1,t.end.line),a=Array(o[0].length-o[0].trim().length).join(" ");return o[0]=o[0].substr(t.start.column),o[o.length-1]=o[o.length-1].substr(0,t.end.column),["",`component: ${n.root.$name}, template line: ${t.start.line}`,"============================================"].concat(o.map(e=>e.replace(a,""))).join("\n")},n=(t,n,a={},...r)=>{let d=o[n](a);if(!["warn","log"].includes(t))throw r.forEach(e=>console.error(e)),new Error(d);d="%c "+d+" ",window.ReBars&&window.ReBars.trace&&(r?(console.groupCollapsed(d,e[t]),r.forEach(e=>console.log(e)),console.groupEnd()):console.log(d,e[t]))},o={noEl:()=>"$el must be present in the document",noHbs:()=>"ReBars need Handlebars in order to run!",noName:()=>"Each ReBars component should have a name",dataFn:({name:e})=>`${e}: must be a function`,tplStr:({name:e})=>`${e}: needs a template string`,propStomp:({name:e,key:t})=>`${e}: "data.${t}" was overrode by a prop`,propUndef:({name:e,key:t})=>`${e}: was passed undefined for prop "${t}"`,oneRoot:({name:e})=>`${e}: must have one root node, and cannot be a {{#watch}} block. \nThis error can also be caused by malformed html.`,badPath:({path:e})=>`${e} was not found in object`,reRender:({name:e,path:t})=>`${e}: re-rendering "${t}"`,patching:({name:e,path:t})=>`${e}: patching ref Array "${t}"`,pathTrigger:({path:e,action:t,name:n})=>`${n}: ${t} "${e}"`,triggered:({name:e,paths:t})=>`${e}: data change "${t}"`,noMethod:({name:e,methodName:n,template:o,loc:a,data:r})=>`${e}: does not have a method named "${n}" ${t(o,{data:r,loc:a})}`,paramUndef:({data:e,template:n,loc:o})=>`component:${e.root.$name} passed undefined to a helper\n      ${t(n,{data:e,loc:o})}\n    `,noComp:({data:e,loc:n,template:o,cName:a})=>`${e.root.$name}: child component "${a}" is not registered\n      ${t(o,{data:e,loc:n})}\n    `,restrictedKey:({name:e,key:t})=>`${e}: cannot use restricted key "${t}" in your data as it's a helper`,focusFail:({ref:e,name:t})=>`${t}: ref "${e}" is used more than once. Focus cannot be restored. If using bind, add a ref="uniqeName" to each`,notKeyed:({name:e,path:t})=>`${e}: patching "${t}" add a {{ref 'someUniqueKey' }} to avoid re-rendering the entire Array`};var a={messages:o,getStr:(e,t)=>o[e](t),warn:n.bind(null,"warn"),fail:n.bind(null,"throw"),log:n.bind(null,"log")};let r=1;var d={dom:{tagComponent(e,t,n){const o=this.getShadow(t),r=o.firstElementChild;(!r||!o.children||o.children.length>1||r.dataset.rbsWatch)&&a.fail("oneRoot",{name:n},o),r.dataset.rbsComp=e;const d=o.innerHTML;return o.remove(),d},restoreCursor(e,t){const n=this.findRef(e,t.ref);n&&(Array.isArray(n)?a.warn("focusFail",{ref:t.ref,name:name},n):(n.focus(),t.pos&&n.setSelectionRange(t.pos+1,t.pos+1)))},findComponent:e=>document.querySelector(`[data-rbs-comp="${e}"]`),findRef:(e,t)=>e.getAttribute("ref")===t?e:e.querySelector(`[ref="${t}"]`),findRefs(e){const t=this.findComponent(e),n=Array.from(t.querySelectorAll("[ref]"));return t.getAttribute("ref")&&n.push(t),n.reduce((e,t)=>{const n=t.getAttribute("ref"),o=e[n];return e[n]=o?[o].concat(t):t,e},{})},findWatcher:e=>document.querySelector(`[data-rbs-watch="${e}"]`),propStr:e=>Object.entries(e).map(([e,t])=>`${e}="${t}"`).join(" "),wrapWatcher(e,t,n){const{tag:o,...a}={tag:"span",...n};return`<${o} ${this.propStr(a)} ${t.length?"":"style='display:none;'"} data-rbs-watch="${e}">${t}</${o}>`},getShadow(e){const t=document.createElement("div");return t.innerHTML=e,t}},stringify:(e,t=2)=>JSON.stringify(e,(e,t)=>"function"==typeof t?t+"":t,t),debounce(e,t=0,n=!1){let o=null;return function(){const a=n&&!o,r=()=>e.apply(this,arguments);clearTimeout(o),o=setTimeout(r,t),a&&r()}},shouldRender:(e,t)=>(Array.isArray(t)?t:[t]).some(t=>{if(e===t||".*"===t)return!0;const n=e.split(".");return t.split(".").every((e,t)=>e===n[t]||"*"===e)}),randomId:()=>`rbs${r++}`,setKey(e,t,n){const o=t.split(".");o.reduce((r,d,s)=>(d in r||a.fail("badPath",{path:t},e),s+1===o.length&&(r[d]=n),r[d]),e)}},s={create(e,t){let n=[];const o=d.debounce(()=>{t(n),n=[]}),a=e=>{n.push(e),o(n)};const r=function e(t,n=[]){return new Proxy(t,{get:function(t,o){if("ReBarsPath"===o)return n.join(".");const a=Reflect.get(...arguments);return"function"==typeof a&&t.hasOwnProperty(o)?a.bind(r):null!==a&&"object"==typeof a&&"methods"!==o?e(a,n.concat(o)):a},set:function(e,t){const o=Reflect.set(...arguments),r=n.concat(t).join(".");return a(r),o},deleteProperty:function(e,t){const o=Reflect.deleteProperty(...arguments),r=n.concat(t).join(".");return a(r),o}})}(e);return r}},i={register({app:e,instance:t,components:n,helpers:o,template:r,methods:s,name:i}){Object.entries(o).forEach(([e,n])=>t.registerHelper(e,n)),t.registerHelper("isComponent",e=>Object.keys(n).includes(e)),t.registerHelper("component",(function(...e){const{hash:o,data:d,loc:s}=e.pop(),i=e[0];return n[i]||a.fail("noComp",{data:d,loc:s,template:r,cName:i}),new t.SafeString(n[i].instance(o).render())})),t.registerHelper("debug",(e,{hash:n,data:o,loc:s})=>(void 0===e&&a.fail("paramUndef",{template:r,data:o,loc:s}),new t.SafeString(`<pre class="debug" ${d.dom.propStr(n)}>${d.stringify(e)}</pre>`))),t.registerHelper("watch",(function(...t){const{fn:n,hash:o,data:s,loc:i}=t.pop(),l=s.root.$_componentId,c=d.randomId(),p=t.map(e=>((e,t=!0)=>(void 0===e&&a.fail("paramUndef",{template:r,loc:i,data:s}),"object"==typeof e?`${e.ReBarsPath}${t?".*":""}`:e))(e,!1)).join(".").split(",");return e.components.instances[l].renders[c]={path:p,render:()=>n(this)},d.dom.wrapWatcher(c,n(this),o)})),t.registerHelper("method",(function(){const[e,...n]=arguments,[o,l="click"]=e.split(":"),{data:c,loc:p}=n.pop();o in s||a.fail("noMethod",{name:i,methodName:o,template:r,data:c,loc:p});const h={"data-rbs-method":[c.root.$_componentId,l,o]};return n&&n.length&&(h["data-rbs-method"]=h["data-rbs-method"].concat(n)),new t.SafeString(d.dom.propStr(h))})),t.registerHelper("bound",(e,{hash:n={},data:o,loc:r})=>{const{$_componentId:s}=o.root,i=[s,e];let l;try{l=e.includes(".")?e.split(".").reduce((e,t)=>e[t],o.root):o.root[e]}catch(t){a.fail("badPath",{path:e})}const c={value:l,ref:n.ref||e,"data-rbs-bound":i};return new t.SafeString(d.dom.propStr(c))})}};function l(e,t){const n=new RegExp(/data-rbs(.*?)="(.*?)"/g);return e.replace(n,"")===t.replace(n,"")}var c={canPatch:e=>e.children.length&&Array.from(e.children).every(e=>e.getAttribute("ref")),hasChanged:(e,t)=>!l(e.innerHTML,t),compare({app:e,$target:t,html:n}){const o=d.dom.getShadow(n),a=Array.from(o.children);Array.from(t.children).forEach(e=>{const t=d.dom.findRef(o,e.getAttribute("ref"));t?l(t.innerHTML,e.innerHTML)||e.replaceWith(t.cloneNode(!0)):e.remove()}),a.forEach((e,n)=>{d.dom.findRef(t,e.getAttribute("ref"))||function(e,t,n=0){n>=e.children.length?e.appendChild(t):e.insertBefore(t,e.children[n])}(t,e.cloneNode(!0),n)}),a.forEach((e,n)=>{const o=t.children[n];o.getAttribute("ref")!==e.getAttribute("ref")&&o.replaceWith(e.cloneNode(!0))})}},p={paths({app:e,paths:t,renders:n,name:o}){Object.entries(n).filter(([e,n])=>t.some(e=>d.shouldRender(e,n.path))&&d.dom.findWatcher(e)).forEach(([t,n])=>{const r=d.dom.findWatcher(t),s=n.render();if(!c.hasChanged(r,s))return;if(c.canPatch(r))return c.compare({app:e,$target:r,html:s}),void a.log("patching",{name:o,path:n.path},r);const i=n.path.find(e=>e.endsWith(".length"));i&&a.warn("notKeyed",{name:o,path:i},r);const l={ref:document.activeElement.getAttribute("ref"),pos:document.activeElement.selectionStart};r.style.display=""===s?"none":"",r.innerHTML=s,d.dom.restoreCursor(r,l),a.log("reRender",{name:o,path:n.path},r)}),e.deleteOrphans()}};const h=["component","ref","debug","isComponent","method","bound","watch","isComponent"];var m={register:function e({id:t,Handlebars:n,trace:o,helpers:r,components:l},{name:c,template:m,data:u=(()=>({})),helpers:f={},hooks:g={},methods:b={},watchers:v={},components:y=[]}){c||a.fail("noName",null,arguments[1]),"function"!=typeof u&&a.fail("dataFn",{name:c}),"string"!=typeof m&&a.fail("tmplStr",{name:c});const $=arguments[0],w=n.create(),A=w.compile(m),E=y.reduce((t,n)=>{const o=e($,n);return t[n.name]=o,t},{...l.registered});return Object.keys(u()).forEach(e=>{h.concat(Object.keys(f)).includes(e)&&a.fail("restrictedKey",{name:c,key:e})}),i.register({app:$,methods:b,instance:w,name:c,helpers:{...f,...r},components:E,template:m}),{instance(e={}){const t=d.randomId(),n=u(),o={};Object.entries(e).forEach(([e,t])=>{void 0===t&&a.warn("propUndef",{name:c,key:e})});const r=s.create({...n,$props:e,$methods:b,$name:c,$_componentId:t,$el:()=>d.dom.findComponent(t),$refs:()=>d.dom.findRefs(t)},e=>{a.log("triggered",{name:c,paths:e},o),p.paths({app:$,paths:e,renders:o,name:c})});g.created&&g.created.call(r);const i={id:t,scope:r,hooks:g,renders:o,handlers:{bound(e){const[t,n]=e.target.dataset.rbsBound.split(",");d.setKey(r,n,e.target.value)},method(e){const[t,n,o,...a]=e.target.dataset.rbsMethod.split(",");r.$methods[o](e,...a)}},detached(){g.detached&&g.detached.call(r)},attached(){g.attached&&g.attached.call(r)},render:()=>d.dom.tagComponent(t,A(r),c)};return $.components.instances[t]=i,i}}}},u={app({$el:e,root:t,Handlebars:n=window.Handlebars,helpers:o={},components:r=[],trace:s=!1}){n||a.fail("noHbs"),document.body.contains(e)||a.fail("noEl");const i={id:d.randomId(),Handlebars:n,trace:s,listening:!0,helpers:o,$el:e,deleteOrphans:d.debounce(()=>{Object.keys(i.components.instances).forEach(e=>{d.dom.findComponent(e)||delete i.components.instances[e]})}),components:{registered:{},instances:{}}};function l(e,t){const n="add"===e?"attached":"detached",o=t.dataset.rbsComp;i.components.instances[o][n]()}function c(e,t){const n="add"===e?"addEventListener":"removeEventListener",[o,a]=t.dataset.rbsMethod.split(",");t[n](a,i.components.instances[o].handlers.method)}function p(e,t){const n="add"===e?"addEventListener":"removeEventListener",[o,a]=t.dataset.rbsBound.split(",");t[n]("input",i.components.instances[o].handlers.bound)}return i.components.registered=r.reduce((e,t)=>(e[t.name]=m.register(i,t),e),{}),new MutationObserver(e=>{e.forEach(({addedNodes:e,removedNodes:t})=>{e.forEach(e=>{e.nodeType!==Node.TEXT_NODE&&(e.dataset.rbsComp&&l("add",e),e.dataset.rbsMethod&&c("add",e),e.dataset.rbsBound&&p("add",e),e.querySelectorAll("[data-rbs-comp]").forEach(l.bind(null,"add")),e.querySelectorAll("[data-rbs-method]").forEach(c.bind(null,"add")),e.querySelectorAll("[data-rbs-bound]").forEach(p.bind(null,"add")))}),t.forEach(e=>{e.nodeType!==Node.TEXT_NODE&&(e.dataset.rbsMethod&&c("remove",e),e.dataset.rbsBound&&p("remove",e),e.dataset.rbsComp&&l("remove",e),e.querySelectorAll("[data-rbs-method]").forEach(c.bind(null,"remove")),e.querySelectorAll("[data-rbs-bound]").forEach(p.bind(null,"remove")),e.querySelectorAll("[data-rbs-comp]").forEach(l.bind(null,"remove")))})})}).observe(e,{childList:!0,attributes:!0,subtree:!0}),e.innerHTML=m.register(i,t).instance().render(),i}},f={template:'\n  <div>\n    <div class="header-container">\n      <h1>\n        {{#watch header }}\n          <span>{{ header.title }}</span>\n          <small>{{ header.description }}</small>\n        {{/watch}}\n      </h1>\n\n      <label>\n        Title:\n        <input type="text" {{ bound "header.title" }}/>\n      </label>\n\n      <label>\n        Description:\n        <input type="text" {{ bound "header.description" }}/>\n      </label>\n    </div>\n\n    <ul class="simple">\n      {{#watch "todos.*" }}\n        {{#each todos }}\n          <li ref="{{ id }}">\n            <div class="todo">\n              <label>\n                <input type="checkbox" {{ isChecked done }} {{ method "toggleDone" id }} />\n                {{#if done }}\n                  <s>{{ name }}</s>\n                {{else}}\n                  <strong>{{ name }}</strong>\n                {{/if}}\n              </label>\n\n              <div class="actions">\n                <button {{ method "deleteTodo" id }}>delete</button>\n              </div>\n            </div>\n          </li>\n        {{/each}}\n      {{/watch}}\n    </ul>\n\n    {{#watch "adding" }}\n      {{#if adding }}\n        <form>\n          <input type="text" name="name" ref="newName" placeholder="the new todo" />\n          <button class="push" {{ method "addItem" }}>Add todo</button>\n          <button class="cancel" {{ method "toggleCreate" }}>Cancel</button>\n        </form>\n      {{else}}\n        <button class="add" {{ method "toggleCreate" }}>Add another</button>\n      {{/if}}\n    {{/watch}}\n  </div>\n  ',data:()=>({adding:!1,header:{title:"Todos",description:"some things that need done"},todos:[{done:!1,name:"Grocery Shopping",id:22},{done:!0,name:"Paint the House",id:44}]}),name:"DemoApp",helpers:{isChecked:e=>e?"checked":""},methods:{addItem(e){e.preventDefault();const t=this.$refs().newName;this.todos.push({id:(new Date).getTime(),name:t.value}),t.value=""},deleteTodo(e,t){const n=this.todos.findIndex(e=>e.id===t);this.todos.splice(n,1)},toggleDone(e,t){const n=this.todos.find(e=>e.id===t);n.done=!n.done},toggleCreate(e){e.preventDefault(),this.adding=!this.adding}}},g={template:'\n  <div>\n    <div class="header-container">\n      {{#watch "header.*" tag="h1" }}\n        <span>{{ header.title }}</span>\n        <small>{{ header.description }}</small>\n      {{/watch}}\n\n      <label>\n        Title:\n        <input type="text" {{ bound "header.title" }}/>\n      </label>\n\n      <label>\n        Description:\n        <input type="text" {{ bound "header.description" }}/>\n      </label>\n    </div>\n\n    {{ component "filters" filters=filters }}\n\n    {{#watch "filters.*,todos.*" tag="ul"}}\n      {{#each filteredTodos as | todo | }}\n        <li ref="{{ todo.id }}">\n          {{\n            component "Todo"\n            todo=todo\n            index=@index\n            deleteTodo=@root.$methods.deleteTodo\n          }}\n        </li>\n      {{/each}}\n    {{/watch}}\n\n    {{\n      component "AddTodo"\n      addTodo=$methods.addTodo\n    }}\n  <div>\n  ',name:"DemoApp",data:()=>({filteredTodos(){let e=this.todos.concat();"incomplete"===this.filters.state?e=this.todos.filter(e=>!e.done):"completed"===this.filters.state&&(e=this.todos.filter(e=>e.done));const t=e.sort((e,t)=>"name"===this.filters.sortBy?e.name.localeCompare(t.name):new Date(e.updated).getTime()-new Date(t.updated).getTime());return"asc"===this.filters.sortDir?t:t.reverse()},filters:{state:null,sortBy:"name",sortDir:"asc"},header:{title:"ReBars Todos",description:"Some things that need done"},todos:[{done:!1,name:"Wash the car",updated:"3/1/2020, 12:37:10 PM",id:21},{done:!0,name:"Shopping for groceries",updated:"2/27/2020, 2:37:10 PM",id:22},{done:!1,name:"Code some Javascript",updated:"1/27/2020, 9:37:10 AM",id:23},{done:!0,name:"Go for a run",updated:"1/15/2020, 10:37:10 PM",id:24}]}),components:[{template:'\n  <div>\n    {{#watch "isAdding" }}\n      {{#if isAdding }}\n        <form>\n          {{#watch "newName" }}\n            <h3>{{ newName }}</h3>\n            <input type="text" {{ bound "newName" }} placeholder="the new todo" />\n          {{/watch}}\n\n          <button class="push" {{ method "addItem" }}>Add todo</button>\n          <button class="cancel" {{ method "toggleAdd" }}>Cancel</button>\n        </form>\n      {{ else }}\n        <button class="add" {{ method "toggleAdd" }}>Add another</button>\n      {{/if}}\n    {{/watch}}\n  </div>\n  ',name:"AddTodo",data:()=>({isAdding:!1,hasError:!1,newName:""}),methods:{toggleAdd(e){e.preventDefault(),this.isAdding=!this.isAdding},addItem(e){e.preventDefault(),this.$props.addTodo(this.newName),this.newName=""}}},{template:'\n    <div>\n      {{#watch "editing" tag="div" class="todo" }}\n        {{#if editing}}\n          <input type="text" value="{{ $props.todo.name }}" ref="nameInput"/>\n          <button {{ method "save" }}>save</button>\n        {{ else }}\n          <label>\n            <input type="checkbox" {{ isChecked $props.todo.done }} {{ method "toggleDone" }} />\n            {{#if $props.todo.done }}\n              <s>{{ $props.todo.name }}</s>\n            {{else}}\n              <strong>{{ $props.todo.name }}</strong>\n            {{/if}}\n          </label>\n\n          <div class="actions">\n            <span class="date">{{ timeAgo todo.updated }}</span>\n            <button {{ method "remove" }}>delete</button>\n            <button {{ method "toggleEditing" }}>edit</button>\n          </div>\n        {{/if}}\n      {{/watch}}\n    </div>\n  ',name:"Todo",data:()=>({editing:!1}),helpers:{isChecked:e=>e?"checked":"",timeAgo:e=>window.moment(e).fromNow()},methods:{save(){this.$props.todo.name=this.$refs().nameInput.value,this.$props.todo.updated=(new Date).toLocaleString(),this.editing=!1},remove(){this.$props.deleteTodo(this.$props.todo.id)},toggleEditing(){this.editing=!this.editing},toggleDone(){this.$props.todo.done=!this.$props.todo.done}}},{template:'\n    <div class="filters">\n      {{#watch "$props.filters.state" tag="div" }}\n        <button {{ disabledIf "completed" }} {{ method "filterBy" "completed" }}>Show Completed</button>\n        <button {{ disabledIf "incomplete" }} {{ method "filterBy" "incomplete" }}>Show Incompleted</button>\n        <button {{ disabledIf null }} {{ method "filterBy" null }}>Show All</button>\n      {{/watch}}\n\n      {{#watch "$props.filters.sortBy,$props.filters.sortDir" tag="div" }}\n        <select {{ bound "$props.filters.sortBy" }}>\n          <option {{ selectedIf $props.filters.sortBy "name" }} value="name">Sort by Name</option>\n          <option {{ selectedIf $props.filters.sortBy "updated" }} value="updated">Sort by Updated at</option>\n        </select>\n\n        <select {{ bound "$props.filters.sortDir" }}>\n          <option {{ selectedIf $props.filters.sortDir "asc" }} value="asc">Ascending</option>\n          <option {{ selectedIf $props.filters.sortDir "desc" }} value="desc">Descending</option>\n        </select>\n      {{/watch}}\n    </div>\n  ',name:"filters",helpers:{selectedIf:(e,t)=>e===t?"selected":"",disabledIf:(e,{data:t})=>t.root.$props.filters.state===e?"disabled":""},methods:{filterBy(e,t){this.$props.filters.state=t}}}],methods:{addTodo(e){this.todos.push({name:e,id:(new Date).getTime(),updated:(new Date).toLocaleString()}),this.filters.state=null},deleteTodo(e){const t=this.todos.findIndex(t=>t.id===e);this.todos.splice(t,1)},showAdd(e){e.preventDefault(),this.uiState.adding=!0}}},b={template:'\n    <h3>\n      Button have been clicked\n        {{#watch "clicked" }}\n          <span>{{ clicked }}</span>\n          {{ pluralize "time" clicked }}\n        {{/watch}}\n      <button {{ method "step" }}>Click Me</button>\n    </h3>\n  ',name:"counter",data:()=>({clicked:0}),helpers:{pluralize:(e,t)=>1==t?e:`${e}s`},methods:{step(){this.clicked++}}};window.Prism=window.Prism||{},window.Prism.manual=!0,u.app({$el:document.getElementById("demo-app-simple"),root:f}),u.app({$el:document.getElementById("demo-app-advanced"),root:g}),u.app({$el:document.getElementById("counter-demo"),root:b}),document.querySelectorAll(".language-html").forEach(e=>{e.innerText.includes("<script src")||(e.classList.remove("language-html"),e.classList.add("language-handlebars"))}),Prism.highlightAll(),Array.from(document.querySelectorAll("code.language-javascript .token.string")).filter(e=>e.innerText.trim().startsWith("<")&&e.innerText.trim().endsWith(">")).forEach(e=>{e.innerHTML=Prism.highlight(e.innerText,Prism.languages.handlebars,"handlebars")}),document.querySelectorAll("nav.tabs button").forEach(e=>{const t=e.parentElement.querySelectorAll("*"),n=e.parentElement.parentElement.querySelectorAll(".tab-content *");e.addEventListener("click",o=>{o.preventDefault(),t.forEach(e=>e.classList.remove("active")),n.forEach(e=>e.classList.remove("active")),e.classList.add("active"),document.getElementById(e.dataset.target).classList.add("active")})}),function(){const e=new IntersectionObserver(e=>{e.forEach(e=>{const t=e.target.getAttribute("id")||e.target.dataset.anchor,n=document.querySelector(`.side-bar-nav a[href="#${t}"]`);n&&(e.intersectionRatio>0?n.classList.add("active"):n.classList.remove("active"))})});document.querySelectorAll(" h1[id],h2[id],div[id],div[data-anchor]").forEach(t=>{e.observe(t)})}();
