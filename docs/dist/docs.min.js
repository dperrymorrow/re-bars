"use strict";const e={warn:"background: #484915; color: #ffffbe; padding: .1em; font-weight: normal;",log:"background: #324645; color:#c9faff; padding: .1em; font-weight: normal;"},t=(e,{loc:t,data:n})=>{const o=e.split("\n").slice(t.start.line-1,t.end.line),a=Array(o[0].length-o[0].trim().length).join(" ");return o[0]=o[0].substr(t.start.column),o[o.length-1]=o[o.length-1].substr(0,t.end.column),["",`component: ${n.root.$name}, template line: ${t.start.line}`,"============================================"].concat(o.map(e=>e.replace(a,""))).join("\n")},n=(t,n,a={},...r)=>{let s=o[n](a);if(!["warn","log"].includes(t))throw r.forEach(e=>console.error(e)),new Error(s);s="%c "+s+" ",r?(console.groupCollapsed(s,e[t]),r.forEach(e=>console.log(e)),console.groupEnd()):console.log(s,e[t])},o={noEl:()=>"$el must be present in the document",noHbs:()=>"ReBars need Handlebars in order to run!",noName:()=>"Each ReBars component should have a name",dataFn:({name:e})=>`component:${e} must be a function`,tplStr:({name:e})=>`component:${e} needs a template string`,propStomp:({name:e,key:t})=>`component:${e} "data.${t}" was overrode by a prop`,propUndef:({name:e,key:t})=>`component:${e} was passed undefined for prop "${t}"`,oneRoot:({name:e})=>`component:${e} must have one root node, and cannot be a {{#watch}} block. \nThis error can also be caused by malformed html.`,noMethod:({name:e,methodName:t})=>`component:${e} does not have a method named "${t}"`,badPath:({path:e})=>`${e} was not found in object`,reRender:({name:e,path:t})=>`component:${e} re-rendering "${t}"`,patching:({name:e,path:t})=>`component:${e} patching ref Array "${t}"`,pathTrigger:({path:e,action:t,name:n})=>`component:${n} ${t} "${e}"`,triggered:({name:e,paths:t})=>`component:${e} data change "${t}"`,paramUndef:({data:e,template:n,loc:o})=>`component:${e.root.$name} passed undefined to a helper\n      ${t(n,{data:e,loc:o})}\n    `,badWatchParam:({data:e,template:n,loc:o,path:a})=>`component:${e.root.$name} could not find "${a}" to watch. If primitve wrap in quotes\n      ${t(n,{data:e,loc:o})}\n    `,noComp:({data:e,loc:n,template:o,cName:a})=>`component:${e.root.$name} child component "${a}" is not registered\n      ${t(o,{data:e,loc:n})}\n    `,restrictedKey:({name:e,key:t})=>`component:${e} cannot use restricted key "${t}" in your data as it's a helper`,focusFail:({ref:e,name:t})=>`component:${t} ref "${e}" is used more than once. Focus cannot be restored. If using bind, add a ref="uniqeName" to each`,notKeyed:({name:e,path:t})=>`component:${e} patching "${t}" add a {{ ref }} to avoid re-rendering the entire target`};var a={messages:o,getStr:(e,t)=>o[e](t),warn:n.bind(null,"warn"),fail:n.bind(null,"throw"),log:n.bind(null,"log")};let r=1;var s={dom:{tagComponent(e,t,n){const o=this.getShadow(t),r=o.firstElementChild;(!r||!o.children||o.children.length>1||r.dataset.rbsWatch)&&a.fail("oneRoot",{name:n},o),r.dataset.rbsComp=e;const s=o.innerHTML;return o.remove(),s},restoreCursor(e,t){const n=this.findRef(e,t.ref);n&&(Array.isArray(n)?a.warn("focusFail",{ref:t.ref,name:name},n):(n.focus(),t.pos&&n.setSelectionRange(t.pos+1,t.pos+1)))},findComponent:e=>document.querySelector(`[data-rbs-comp="${e}"]`),findRef:(e,t)=>e.querySelector(`[data-rbs-ref="${t}"]`),findRefs(e){const t="object"==typeof e?e:this.findComponent(e);return Array.from(t.querySelectorAll("[data-rbs-ref]")).reduce((e,t)=>{const n=t.dataset.rbsRef,o=e[t.dataset.rbsRef];return e[n]=o?[o].concat(t):t,e},{})},findWatcher:e=>document.querySelector(`[data-rbs-watch="${e}"]`),wrapWatcher:(e,t,n)=>{const{tag:o,...a}={tag:"span",class:"rbs-watch",...n};return`<${o} ${Object.entries(a).map(([e,t])=>`${e}="${t}"`).join(" ")} ${t.length?"":"style='display:none;'"} data-rbs-watch="${e}">${t}</${o}>`},isKeyedNode:e=>e.children.length&&Array.from(e.children).every(e=>e.dataset.rbsRef),normalizeHtml:e=>e.replace(new RegExp(/="rbs(.*?)"/g),""),isEqHtml(e,t){const n="string"==typeof e?this.getShadow(e):this.getShadow(e.innerHTML),o="string"==typeof t?this.getShadow(t):this.getShadow(t.innerHTML);return n.innerHTML=this.normalizeHtml(n.innerHTML),o.innerHTML=this.normalizeHtml(o.innerHTML),n.isEqualNode(o)},getShadow(e){const t=document.createElement("div");return t.innerHTML=e,t}},deleteOrphans(e,t){const n=this.getStorage(e,t),o=this.getStorage(e);Object.keys(o.inst).forEach(e=>{if(!this.dom.findComponent(e)){const t=o.inst[e];t.scope.$hooks.detached&&t.scope.$hooks.detached(),delete o.inst[e]}}),Object.keys(n.renders).forEach(e=>{this.dom.findWatcher(e)||delete n.renders[e]})},debounce(e,t,n=!1){let o=null;return function(){const a=n&&!o,r=()=>e.apply(this,arguments);clearTimeout(o),o=setTimeout(r,t),a&&r()}},makeParams:e=>e.map(e=>{if(["[event]"].includes(e))return e.replace("[","").replace("]","");if(null!==e&&"object"==typeof e)throw new Error(`component:${name} must only pass primitives as argument to a handler. \n${JSON.stringify(e,null,2)}`);return"string"==typeof e?`'${e}'`:null===e?`${e}`:e}),getStorage(e,t){return t?this.findByPath(window.ReBars,`apps.${e}.inst.${t}`):this.findByPath(window.ReBars,`apps.${e}`)},findByPath:(e,t)=>{try{return t.includes(".")?t.split(".").reduce((e,t)=>e[t],e):e[t]}catch(n){a.fail("badPath",{path:t},e)}},shouldRender:(e,t)=>(Array.isArray(t)?t:[t]).some(t=>{if(e===t||".*"===t)return!0;const n=e.split(".");return t.split(".").every((e,t)=>e===n[t]||"*"===e)}),randomId:()=>`rbs${r++}`,setKey(e,t,n){const o=t.split(".");o.reduce((r,s,d)=>(s in r||a.fail("badPath",{path:t},e),d+1===o.length&&(r[s]=n),r[s]),e)}},d={create(e){const t=function e(n,o=[]){return new Proxy(n,{get:function(n,a){if("ReBarsPath"===a)return o.join(".");const r=Reflect.get(...arguments);return"function"==typeof r&&n.hasOwnProperty(a)?r.bind(t):null!==r&&"object"==typeof r&&"methods"!==a?e(r,o.concat(a)):r},set:function(e,t){const n=Reflect.set(...arguments);o.concat(t).join(".");return n},deleteProperty:function(e,t){const n=Reflect.deleteProperty(...arguments);o.concat(t).join(".");return n}})}(e);return t}},i={register({instance:e,helpers:t,components:n,template:o}){Object.entries(t).forEach(([t,n])=>e.registerHelper(t,n)),e.registerHelper("component",(function(...t){const{hash:r,data:s,loc:d}=t.pop(),i=t[0];return n[i]||a.fail("noComp",{data:s,loc:d,template:o,cName:i}),new e.SafeString(n[i].instance(r).render())})),e.registerHelper("isComponent",(function(e){return Object.keys(n).includes(e)})),e.registerHelper("ref",t=>new e.SafeString(`data-rbs-ref="${t}"`)),e.registerHelper("debug",(t,{data:n,loc:r})=>{void 0===t&&a.fail("paramUndef",{template:o,data:n,loc:r});return new e.SafeString(`<pre class="debug">${JSON.stringify(t,(e,t)=>"function"==typeof t?t+"":t,2)}</pre>`)})}},l={register(e){e.registerHelper("method",(function(){const[t,...n]=arguments,[o,a="click"]=t.split(":"),{data:r}=n.pop(),{$_componentId:s}=r.root;let d=[o,a,s];return n&&n.length&&(d=d.concat(n)),new e.SafeString(`data-rbs-method='${JSON.stringify(d)}'`)})),e.registerHelper("bound",(e,{hash:t={},data:n})=>"bound")}},c={register(e,t,n){t.registerHelper("watch",(function(...t){const{fn:o,hash:r,data:d,loc:i}=t.pop(),l=d.root.$_componentId,c=s.randomId(),p=t.map(e=>((e,t=!0)=>(void 0===e&&a.fail("paramUndef",{template:n,loc:i,data:d}),"object"==typeof e?`${e.ReBarsPath}${t?".*":""}`:e))(e,!1)).join(".").split(",");return e.components.instances[l].renders[c]={path:p,render:()=>o(this)},s.dom.wrapWatcher(c,o(this),r)}))}};const p=["component","ref","debug","isComponent","method","bound","watch","isComponent"];var h={register:function e({id:t,Handlebars:n,trace:o,helpers:r,components:h},{name:m,template:u,data:f,helpers:g={},hooks:b={},methods:$={},watchers:w={},components:y=[]}){f=f||function(){return{}},m||a.fail("noName",null,arguments[1]),"function"!=typeof f&&a.fail("dataFn",{name:m}),"string"!=typeof u&&a.fail("tmplStr",{name:m});const v=arguments[0],S=n.create(),A=S.compile(u),T=y.reduce((t,n)=>{const o=e(v,n);return t[n.name]=o,t},{...h.registered});return Object.keys(f()).forEach(e=>{p.concat(Object.keys(g)).includes(e)&&a.fail("restrictedKey",{name:m,key:e})}),i.register({instance:S,helpers:{...g,...r},components:T,template:u}),l.register(S,$),c.register(v,S,u),{instance(e={}){const n=s.randomId(),o=f();Object.entries(e).forEach(([e,t])=>{void 0===t&&a.warn("propUndef",{name:m,key:e})});const r=d.create({...o,$props:e,$methods:$,$name:m,$_appId:t,$_componentId:n,$el:()=>s.dom.findComponet(n),$refs:()=>s.dom.findRefs(n)});b.created&&b.created.call(r);const i={id:n,scope:r,hooks:b,renders:{},init:function(){s.dom.findComponent(n),b.attached&&b.attached.call(r)},render:()=>s.dom.tagComponent(n,A(r),m)};return v.components.instances[n]=i,i}}}},m={app({$el:e,root:t,Handlebars:n=window.Handlebars,helpers:o={},components:r={},trace:d=!1}){n||a.fail("noHbs"),document.body.contains(e)||a.fail("noEl");const i={id:s.randomId(),Handlebars:n,trace:d,helpers:o,$el:e,components:{registered:{},instances:{}}};new MutationObserver(e=>{e.forEach(({addedNodes:e,removedNodes:t})=>{e.forEach(e=>{"querySelectorAll"in e&&(e.querySelectorAll("[data-rbs-comp]").forEach(e=>{i.components.instances[e.dataset.rbsComp].init()}),e.querySelectorAll("[data-rbs-method]").forEach(e=>{const[t,n,o,...a]=JSON.parse(e.dataset.rbsMethod),r=i.components.instances[o].scope;e.addEventListener(n,e=>{r.$methods[t].call(r,e,...a)})}))})})}).observe(e,{childList:!0,attributes:!0,subtree:!0});const l=h.register(i,t).instance();return e.innerHTML=l.render(),l.init(),i}},u={template:'\n  <div>\n    <div class="header-container">\n      <h1>\n        {{#watch header }}\n          <span>{{ header.title }}</span>\n          <small>{{ header.description }}</small>\n        {{/watch}}\n      </h1>\n\n      <label>\n        Title:\n        <input type="text" {{ bound "header.title" }}/>\n      </label>\n\n      <label>\n        Description:\n        <input type="text" {{ bound "header.description" }}/>\n      </label>\n    </div>\n\n    {{ debug . }}\n\n    <ul class="simple">\n      {{#watch "todos.*" }}\n        {{#each todos }}\n          <li {{ ref id }}>\n            <div class="todo">\n              <label>\n                <input type="checkbox" {{ isChecked done }} {{ method "toggleDone" id }} />\n                {{#if done }}\n                  <s>{{ name }}</s>\n                {{else}}\n                  <strong>{{ name }}</strong>\n                {{/if}}\n              </label>\n\n              <div class="actions">\n                <button {{ method "deleteTodo" id }}>delete</button>\n              </div>\n            </div>\n          </li>\n        {{/each}}\n      {{/watch}}\n    </ul>\n\n    {{#watch "adding" }}\n      {{#if adding }}\n        <form>\n          <input type="text" name="name" {{ ref "newName" }} placeholder="the new todo" />\n          <button class="push" {{ method "addItem" }}>Add todo</button>\n          <button class="cancel" {{ method "toggleCreate" }}>Cancel</button>\n        </form>\n      {{else}}\n        <button class="add" {{ method "toggleCreate" }}>Add another</button>\n      {{/if}}\n    {{/watch}}\n  </div>\n  ',data:()=>({adding:!1,header:{title:"Todos",description:"some things that need done"},todos:[{done:!1,name:"Grocery Shopping",id:22},{done:!0,name:"Paint the House",id:44}]}),name:"DemoApp",helpers:{isChecked:e=>e?"checked":""},hooks:{attached(){console.log(this,"attached")},created(){console.log(this,"created")}},methods:{addItem(e){e.preventDefault();const t=this.$refs().newName;this.todos.push({id:(new Date).getTime(),name:t.value}),t.value=""},deleteTodo(e,t){const n=this.todos.findIndex(e=>e.id===t);this.todos.splice(n,1)},toggleDone(e,t){const n=this.todos.find(e=>e.id===t);n.done=!n.done},toggleCreate(e){e.preventDefault(),this.adding=!this.adding}}},f={template:'\n  <div>\n    <div class="header-container">\n      {{#watch "header.*" tag="h1" }}\n        <span>{{ header.title }}</span>\n        <small>{{ header.description }}</small>\n      {{/watch}}\n\n      <label>\n        Title:\n        <input type="text" {{ bound "header.title" }}/>\n      </label>\n\n      <label>\n        Description:\n        <input type="text" {{ bound "header.description" }}/>\n      </label>\n    </div>\n\n    {{ component "filters" filters=filters }}\n\n    {{#watch "filters.*,todos.length,todos.*.done" tag="ul"}}\n      {{#each filteredTodos as | todo | }}\n        <li {{ ref todo.id }}>\n          {{\n            component "Todo"\n            todo=todo\n            index=@index\n            deleteTodo=@root.$methods.deleteTodo\n          }}\n        </li>\n      {{/each}}\n    {{/watch}}\n\n    {{\n      component "AddTodo"\n      addTodo=$methods.addTodo\n    }}\n  <div>\n  ',name:"DemoApp",data:()=>({filteredTodos(){let e=this.todos.concat();"incomplete"===this.filters.state?e=this.todos.filter(e=>!e.done):"completed"===this.filters.state&&(e=this.todos.filter(e=>e.done));const t=e.sort((e,t)=>"name"===this.filters.sortBy?e.name.localeCompare(t.name):new Date(e.updated).getTime()-new Date(t.updated).getTime());return"asc"===this.filters.sortDir?t:t.reverse()},filters:{state:null,sortBy:"name",sortDir:"asc"},header:{title:"ReBars Todos",description:"Some things that need done"},todos:[{done:!1,name:"Wash the car",updated:"3/1/2020, 12:37:10 PM",id:21},{done:!0,name:"Shopping for groceries",updated:"2/27/2020, 2:37:10 PM",id:22},{done:!1,name:"Code some Javascript",updated:"1/27/2020, 9:37:10 AM",id:23},{done:!0,name:"Go for a run",updated:"1/15/2020, 10:37:10 PM",id:24}]}),components:[{template:'\n  <div>\n    {{#watch "isAdding" }}\n      {{#if isAdding }}\n        <form>\n          {{#watch "newName" }}\n            <h3>{{ newName }}</h3>\n            <input type="text" {{ bound "newName" }} placeholder="the new todo" />\n          {{/watch}}\n\n          <button class="push" {{ method "addItem" }}>Add todo</button>\n          <button class="cancel" {{ method "toggleAdd" }}>Cancel</button>\n        </form>\n      {{ else }}\n        <button class="add" {{ method "toggleAdd" }}>Add another</button>\n      {{/if}}\n    {{/watch}}\n  </div>\n  ',name:"AddTodo",data:()=>({isAdding:!1,hasError:!1,newName:""}),methods:{toggleAdd(e){e.preventDefault(),this.isAdding=!this.isAdding},addItem(e){e.preventDefault(),this.$props.addTodo(this.newName),this.newName=""}}},{template:'\n    <div>\n      {{#watch "editing" tag="div" class="todo" }}\n        {{ $_componentId }}\n        {{#if editing}}\n          <input type="text" value="{{ $props.todo.name }}" {{ ref "nameInput" }}/>\n          <button {{ method "save" }}>save</button>\n        {{ else }}\n\n          {{#watch $props.todo }}\n            <label>\n              <input type="checkbox" {{ isChecked $props.todo.done }} {{ method "toggleDone" }} />\n              {{#if $props.todo.done }}\n                <s>{{ $props.todo.name }}</s>\n              {{else}}\n                <strong>{{ $props.todo.name }}</strong>\n              {{/if}}\n            </label>\n          {{/watch}}\n\n          <div class="actions">\n            <span class="date">{{ timeAgo todo.updated }}</span>\n            <button {{ method "remove" }}>delete</button>\n            <button {{ method "toggleEditing" }}>edit</button>\n          </div>\n        {{/if}}\n      {{/watch}}\n    </div>\n  ',name:"Todo",data:()=>({editing:!1}),helpers:{isChecked:e=>e?"checked":"",timeAgo:e=>window.moment(e).fromNow()},hooks:{detached(){console.log(this.$_componentId,this.$props.todo.name)}},methods:{save(){this.$props.todo.name=this.$refs().nameInput.value,this.$props.todo.updated=(new Date).toLocaleString(),this.editing=!1},remove(){this.$props.deleteTodo(this.$props.todo.id)},toggleEditing(){this.editing=!this.editing},toggleDone(){this.$props.todo.done=!this.$props.todo.done}}},{template:'\n    <div class="filters">\n      {{#watch "$props.filters.state" tag="div" }}\n        <button {{ disabledIf "completed" }} {{ method "filterBy" "completed" }}>Show Completed</button>\n        <button {{ disabledIf "incomplete" }} {{ method "filterBy" "incomplete" }}>Show Incompleted</button>\n        <button {{ disabledIf null }} {{ method "filterBy" null }}>Show All</button>\n      {{/watch}}\n\n      {{#watch "$props.filters.sortBy,$props.filters.sortDir" tag="div" }}\n        <select {{ bound "$props.filters.sortBy" }}>\n          <option {{ selectedIf $props.filters.sortBy "name" }} value="name">Sort by Name</option>\n          <option {{ selectedIf $props.filters.sortBy "updated" }} value="updated">Sort by Updated at</option>\n        </select>\n\n        <select {{ bound "$props.filters.sortDir" }}>\n          <option {{ selectedIf $props.filters.sortDir "asc" }} value="asc">Ascending</option>\n          <option {{ selectedIf $props.filters.sortDir "desc" }} value="desc">Descending</option>\n        </select>\n      {{/watch}}\n    </div>\n  ',name:"filters",helpers:{selectedIf:(e,t)=>e===t?"selected":"",disabledIf:(e,{data:t})=>t.root.$props.filters.state===e?"disabled":""},methods:{filterBy(e,t){this.$props.filters.state=t}}}],methods:{addTodo(e){this.todos.push({name:e,id:(new Date).getTime(),updated:(new Date).toLocaleString()}),this.filters.state=null},deleteTodo(e,t){const n=this.todos.findIndex(e=>e.id===t);this.todos.splice(n,1)},showAdd(e){e.preventDefault(),this.uiState.adding=!0}}},g={template:'\n    <h3>\n      Button have been clicked\n        {{#watch "clicked" }}\n          <span>{{ clicked }}</span>\n          {{ pluralize "time" clicked }}\n        {{/watch}}\n      <button {{ method "step" }}>Click Me</button>\n    </h3>\n  ',name:"counter",data:()=>({clicked:0}),helpers:{pluralize:(e,t)=>1==t?e:`${e}s`},methods:{step(){this.clicked++}}};window.Prism=window.Prism||{},window.Prism.manual=!0,m.app({$el:document.getElementById("demo-app-simple"),root:u}),m.app({$el:document.getElementById("demo-app-advanced"),root:f}),m.app({$el:document.getElementById("counter-demo"),root:g}),document.querySelectorAll(".language-html").forEach(e=>{e.innerText.includes("<script src")||(e.classList.remove("language-html"),e.classList.add("language-handlebars"))}),Prism.highlightAll(),Array.from(document.querySelectorAll("code.language-javascript .token.string")).filter(e=>e.innerText.trim().startsWith("<")&&e.innerText.trim().endsWith(">")).forEach(e=>{e.innerHTML=Prism.highlight(e.innerText,Prism.languages.handlebars,"handlebars")}),document.querySelectorAll("nav.tabs button").forEach(e=>{const t=e.parentElement.querySelectorAll("*"),n=e.parentElement.parentElement.querySelectorAll(".tab-content *");e.addEventListener("click",o=>{o.preventDefault(),t.forEach(e=>e.classList.remove("active")),n.forEach(e=>e.classList.remove("active")),e.classList.add("active"),document.getElementById(e.dataset.target).classList.add("active")})}),function(){const e=new IntersectionObserver(e=>{e.forEach(e=>{const t=e.target.getAttribute("id")||e.target.dataset.anchor,n=document.querySelector(`.side-bar-nav a[href="#${t}"]`);n&&(e.intersectionRatio>0?n.classList.add("active"):n.classList.remove("active"))})});document.querySelectorAll(" h1[id],h2[id],div[id],div[data-anchor]").forEach(t=>{e.observe(t)})}();
