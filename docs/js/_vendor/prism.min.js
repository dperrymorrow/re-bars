var _self =
    "undefined" != typeof window
      ? window
      : "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope
        ? self
        : {},
  Prism = (function(u) {
    var c = /\blang(?:uage)?-([\w-]+)\b/i,
      n = 0,
      O = {
        manual: u.Prism && u.Prism.manual,
        disableWorkerMessageHandler: u.Prism && u.Prism.disableWorkerMessageHandler,
        util: {
          encode: function e(n) {
            return n instanceof z
              ? new z(n.type, e(n.content), n.alias)
              : Array.isArray(n)
                ? n.map(e)
                : n
                  .replace(/&/g, "&amp;")
                  .replace(/</g, "&lt;")
                  .replace(/\u00a0/g, " ");
          },
          type: function(e) {
            return Object.prototype.toString.call(e).slice(8, -1);
          },
          objId: function(e) {
            return e.__id || Object.defineProperty(e, "__id", { value: ++n }), e.__id;
          },
          clone: function a(e, t) {
            var r,
              n,
              i = O.util.type(e);
            switch (((t = t || {}), i)) {
            case "Object":
              if (((n = O.util.objId(e)), t[n])) return t[n];
              for (var s in ((r = {}), (t[n] = r), e)) e.hasOwnProperty(s) && (r[s] = a(e[s], t));
              return r;
            case "Array":
              return (
                (n = O.util.objId(e)),
                t[n]
                  ? t[n]
                  : ((r = []),
                  (t[n] = r),
                  e.forEach(function(e, n) {
                    r[n] = a(e, t);
                  }),
                  r)
              );
            default:
              return e;
            }
          },
          getLanguage: function(e) {
            for (; e && !c.test(e.className); ) e = e.parentElement;
            return e ? (e.className.match(c) || [, "none"])[1].toLowerCase() : "none";
          },
          currentScript: function() {
            if ("undefined" == typeof document) return null;
            if ("currentScript" in document) return document.currentScript;
            try {
              throw new Error();
            } catch (e) {
              var n = (/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(e.stack) || [])[1];
              if (n) {
                var a = document.getElementsByTagName("script");
                for (var t in a) if (a[t].src == n) return a[t];
              }
              return null;
            }
          },
        },
        languages: {
          extend: function(e, n) {
            var a = O.util.clone(O.languages[e]);
            for (var t in n) a[t] = n[t];
            return a;
          },
          insertBefore: function(a, e, n, t) {
            var r = (t = t || O.languages)[a],
              i = {};
            for (var s in r)
              if (r.hasOwnProperty(s)) {
                if (s == e) for (var l in n) n.hasOwnProperty(l) && (i[l] = n[l]);
                n.hasOwnProperty(s) || (i[s] = r[s]);
              }
            var o = t[a];
            return (
              (t[a] = i),
              O.languages.DFS(O.languages, function(e, n) {
                n === o && e != a && (this[e] = i);
              }),
              i
            );
          },
          DFS: function e(n, a, t, r) {
            r = r || {};
            var i = O.util.objId;
            for (var s in n)
              if (n.hasOwnProperty(s)) {
                a.call(n, s, n[s], t || s);
                var l = n[s],
                  o = O.util.type(l);
                "Object" !== o || r[i(l)]
                  ? "Array" !== o || r[i(l)] || ((r[i(l)] = !0), e(l, a, s, r))
                  : ((r[i(l)] = !0), e(l, a, null, r));
              }
          },
        },
        plugins: {},
        highlightAll: function(e, n) {
          O.highlightAllUnder(document, e, n);
        },
        highlightAllUnder: function(e, n, a) {
          var t = {
            callback: a,
            container: e,
            selector:
              "code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code",
          };
          O.hooks.run("before-highlightall", t),
          (t.elements = Array.prototype.slice.apply(t.container.querySelectorAll(t.selector))),
          O.hooks.run("before-all-elements-highlight", t);
          for (var r, i = 0; (r = t.elements[i++]); ) O.highlightElement(r, !0 === n, t.callback);
        },
        highlightElement: function(e, n, a) {
          var t = O.util.getLanguage(e),
            r = O.languages[t];
          e.className = e.className.replace(c, "").replace(/\s+/g, " ") + " language-" + t;
          var i = e.parentNode;
          i &&
            "pre" === i.nodeName.toLowerCase() &&
            (i.className = i.className.replace(c, "").replace(/\s+/g, " ") + " language-" + t);
          var s = { element: e, language: t, grammar: r, code: e.textContent };
          function l(e) {
            (s.highlightedCode = e),
            O.hooks.run("before-insert", s),
            (s.element.innerHTML = s.highlightedCode),
            O.hooks.run("after-highlight", s),
            O.hooks.run("complete", s),
            a && a.call(s.element);
          }
          if ((O.hooks.run("before-sanity-check", s), !s.code))
            return O.hooks.run("complete", s), void (a && a.call(s.element));
          if ((O.hooks.run("before-highlight", s), s.grammar))
            if (n && u.Worker) {
              var o = new Worker(O.filename);
              (o.onmessage = function(e) {
                l(e.data);
              }),
              o.postMessage(JSON.stringify({ language: s.language, code: s.code, immediateClose: !0 }));
            } else l(O.highlight(s.code, s.grammar, s.language));
          else l(O.util.encode(s.code));
        },
        highlight: function(e, n, a) {
          var t = { code: e, grammar: n, language: a };
          return (
            O.hooks.run("before-tokenize", t),
            (t.tokens = O.tokenize(t.code, t.grammar)),
            O.hooks.run("after-tokenize", t),
            z.stringify(O.util.encode(t.tokens), t.language)
          );
        },
        tokenize: function(e, n) {
          var a = n.rest;
          if (a) {
            for (var t in a) n[t] = a[t];
            delete n.rest;
          }
          var r = new i();
          return (
            C(r, r.head, e),
            (function e(n, a, t, r, i, s, l) {
              for (var o in t)
                if (t.hasOwnProperty(o) && t[o]) {
                  var u = t[o];
                  u = Array.isArray(u) ? u : [u];
                  for (var c = 0; c < u.length; ++c) {
                    if (l && l == o + "," + c) return;
                    var g = u[c],
                      d = g.inside,
                      p = !!g.lookbehind,
                      f = !!g.greedy,
                      m = 0,
                      h = g.alias;
                    if (f && !g.pattern.global) {
                      var v = g.pattern.toString().match(/[imsuy]*$/)[0];
                      g.pattern = RegExp(g.pattern.source, v + "g");
                    }
                    g = g.pattern || g;
                    for (var b = r.next, k = i; b !== a.tail; k += b.value.length, b = b.next) {
                      var y = b.value;
                      if (a.length > n.length) return;
                      if (!(y instanceof z)) {
                        var F = 1;
                        if (f && b != a.tail.prev) {
                          if (((g.lastIndex = k), !(S = g.exec(n)))) break;
                          var w = S.index + (p && S[1] ? S[1].length : 0),
                            x = S.index + S[0].length,
                            A = k;
                          for (A += b.value.length; A <= w; ) A += (b = b.next).value.length;
                          if (((k = A -= b.value.length), b.value instanceof z)) continue;
                          for (
                            var P = b;
                            P !== a.tail && (A < x || ("string" == typeof P.value && !P.prev.value.greedy));
                            P = P.next
                          )
                            F++, (A += P.value.length);
                          F--, (y = n.slice(k, A)), (S.index -= k);
                        } else {
                          g.lastIndex = 0;
                          var S = g.exec(y);
                        }
                        if (S) {
                          p && (m = S[1] ? S[1].length : 0);
                          x = (w = S.index + m) + (S = S[0].slice(m)).length;
                          var _ = y.slice(0, w),
                            $ = y.slice(x),
                            j = b.prev;
                          if (
                            (_ && ((j = C(a, j, _)), (k += _.length)),
                            E(a, j, F),
                            (b = C(a, j, new z(o, d ? O.tokenize(S, d) : S, h, S, f))),
                            $ && C(a, b, $),
                            1 < F && e(n, a, t, b.prev, k, !0, o + "," + c),
                            s)
                          )
                            break;
                        } else if (s) break;
                      }
                    }
                  }
                }
            })(e, r, n, r.head, 0),
            (function(e) {
              for (var n = [], a = e.head.next; a !== e.tail; ) n.push(a.value), (a = a.next);
              return n;
            })(r)
          );
        },
        hooks: {
          all: {},
          add: function(e, n) {
            var a = O.hooks.all;
            (a[e] = a[e] || []), a[e].push(n);
          },
          run: function(e, n) {
            var a = O.hooks.all[e];
            if (a && a.length) for (var t, r = 0; (t = a[r++]); ) t(n);
          },
        },
        Token: z,
      };
    function z(e, n, a, t, r) {
      (this.type = e), (this.content = n), (this.alias = a), (this.length = 0 | (t || "").length), (this.greedy = !!r);
    }
    function i() {
      var e = { value: null, prev: null, next: null },
        n = { value: null, prev: e, next: null };
      (e.next = n), (this.head = e), (this.tail = n), (this.length = 0);
    }
    function C(e, n, a) {
      var t = n.next,
        r = { value: a, prev: n, next: t };
      return (n.next = r), (t.prev = r), e.length++, r;
    }
    function E(e, n, a) {
      for (var t = n.next, r = 0; r < a && t !== e.tail; r++) t = t.next;
      ((n.next = t).prev = n), (e.length -= r);
    }
    if (
      ((u.Prism = O),
      (z.stringify = function n(e, a) {
        if ("string" == typeof e) return e;
        if (Array.isArray(e)) {
          var t = "";
          return (
            e.forEach(function(e) {
              t += n(e, a);
            }),
            t
          );
        }
        var r = {
            type: e.type,
            content: n(e.content, a),
            tag: "span",
            classes: ["token", e.type],
            attributes: {},
            language: a,
          },
          i = e.alias;
        i && (Array.isArray(i) ? Array.prototype.push.apply(r.classes, i) : r.classes.push(i)), O.hooks.run("wrap", r);
        var s = "";
        for (var l in r.attributes) s += " " + l + "=\"" + (r.attributes[l] || "").replace(/"/g, "&quot;") + "\"";
        return "<" + r.tag + " class=\"" + r.classes.join(" ") + "\"" + s + ">" + r.content + "</" + r.tag + ">";
      }),
      !u.document)
    )
      return (
        u.addEventListener &&
          (O.disableWorkerMessageHandler ||
            u.addEventListener(
              "message",
              function(e) {
                var n = JSON.parse(e.data),
                  a = n.language,
                  t = n.code,
                  r = n.immediateClose;
                u.postMessage(O.highlight(t, O.languages[a], a)), r && u.close();
              },
              !1
            )),
        O
      );
    var e = O.util.currentScript();
    function a() {
      O.manual || O.highlightAll();
    }
    if ((e && ((O.filename = e.src), e.hasAttribute("data-manual") && (O.manual = !0)), !O.manual)) {
      var t = document.readyState;
      "loading" === t || ("interactive" === t && e && e.defer)
        ? document.addEventListener("DOMContentLoaded", a)
        : window.requestAnimationFrame
          ? window.requestAnimationFrame(a)
          : window.setTimeout(a, 16);
    }
    return O;
  })(_self);
"undefined" != typeof module && module.exports && (module.exports = Prism),
"undefined" != typeof global && (global.Prism = Prism),
(Prism.languages.markup = {
  comment: /<!--[\s\S]*?-->/,
  prolog: /<\?[\s\S]+?\?>/,
  doctype: {
    pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:(?!<!--)[^"'\]]|"[^"]*"|'[^']*'|<!--[\s\S]*?-->)*\]\s*)?>/i,
    greedy: !0,
  },
  cdata: /<!\[CDATA\[[\s\S]*?]]>/i,
  tag: {
    pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/i,
    greedy: !0,
    inside: {
      tag: { pattern: /^<\/?[^\s>\/]+/i, inside: { punctuation: /^<\/?/, namespace: /^[^\s>\/:]+:/ } },
      "attr-value": {
        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/i,
        inside: { punctuation: [/^=/, { pattern: /^(\s*)["']|["']$/, lookbehind: !0 }] },
      },
      punctuation: /\/?>/,
      "attr-name": { pattern: /[^\s>\/]+/, inside: { namespace: /^[^\s>\/:]+:/ } },
    },
  },
  entity: /&#?[\da-z]{1,8};/i,
}),
(Prism.languages.markup.tag.inside["attr-value"].inside.entity = Prism.languages.markup.entity),
Prism.hooks.add("wrap", function(e) {
  "entity" === e.type && (e.attributes.title = e.content.replace(/&amp;/, "&"));
}),
Object.defineProperty(Prism.languages.markup.tag, "addInlined", {
  value: function(e, n) {
    var a = {};
    (a["language-" + n] = {
      pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
      lookbehind: !0,
      inside: Prism.languages[n],
    }),
    (a.cdata = /^<!\[CDATA\[|\]\]>$/i);
    var t = { "included-cdata": { pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i, inside: a } };
    t["language-" + n] = { pattern: /[\s\S]+/, inside: Prism.languages[n] };
    var r = {};
    (r[e] = {
      pattern: RegExp(
        "(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)".replace(/__/g, e),
        "i"
      ),
      lookbehind: !0,
      greedy: !0,
      inside: t,
    }),
    Prism.languages.insertBefore("markup", "cdata", r);
  },
}),
(Prism.languages.xml = Prism.languages.extend("markup", {})),
(Prism.languages.html = Prism.languages.markup),
(Prism.languages.mathml = Prism.languages.markup),
(Prism.languages.svg = Prism.languages.markup),
(Prism.languages.clike = {
  comment: [
    { pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0 },
    { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 },
  ],
  string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 },
  "class-name": {
    pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,
    lookbehind: !0,
    inside: { punctuation: /[.\\]/ },
  },
  keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
  boolean: /\b(?:true|false)\b/,
  function: /\w+(?=\()/,
  number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,
  operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
  punctuation: /[{}[\];(),.:]/,
}),
(Prism.languages.javascript = Prism.languages.extend("clike", {
  "class-name": [
    Prism.languages.clike["class-name"],
    {
      pattern: /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,
      lookbehind: !0,
    },
  ],
  keyword: [
    { pattern: /((?:^|})\s*)(?:catch|finally)\b/, lookbehind: !0 },
    {
      pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
      lookbehind: !0,
    },
  ],
  number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
  function: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
  operator: /--|\+\+|\*\*=?|=>|&&|\|\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?[.?]?|[~:]/,
})),
(Prism.languages.javascript[
  "class-name"
][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/),
Prism.languages.insertBefore("javascript", "keyword", {
  regex: {
    pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*[\s\S]*?\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
    lookbehind: !0,
    greedy: !0,
  },
  "function-variable": {
    pattern: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,
    alias: "function",
  },
  parameter: [
    {
      pattern: /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,
      lookbehind: !0,
      inside: Prism.languages.javascript,
    },
    { pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i, inside: Prism.languages.javascript },
    {
      pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,
      lookbehind: !0,
      inside: Prism.languages.javascript,
    },
    {
      pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,
      lookbehind: !0,
      inside: Prism.languages.javascript,
    },
  ],
  constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/,
}),
Prism.languages.insertBefore("javascript", "string", {
  "template-string": {
    pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,
    greedy: !0,
    inside: {
      "template-punctuation": { pattern: /^`|`$/, alias: "string" },
      interpolation: {
        pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,
        lookbehind: !0,
        inside: {
          "interpolation-punctuation": { pattern: /^\${|}$/, alias: "punctuation" },
          rest: Prism.languages.javascript,
        },
      },
      string: /[\s\S]+/,
    },
  },
}),
Prism.languages.markup && Prism.languages.markup.tag.addInlined("script", "javascript"),
(Prism.languages.js = Prism.languages.javascript),
(function(v) {
  function b(e, n) {
    return "___" + e.toUpperCase() + n + "___";
  }
  Object.defineProperties((v.languages["markup-templating"] = {}), {
    buildPlaceholders: {
      value: function(t, r, e, i) {
        if (t.language === r) {
          var s = (t.tokenStack = []);
          (t.code = t.code.replace(e, function(e) {
            if ("function" == typeof i && !i(e)) return e;
            for (var n, a = s.length; -1 !== t.code.indexOf((n = b(r, a))); ) ++a;
            return (s[a] = e), n;
          })),
          (t.grammar = v.languages.markup);
        }
      },
    },
    tokenizePlaceholders: {
      value: function(p, f) {
        if (p.language === f && p.tokenStack) {
          p.grammar = v.languages[f];
          var m = 0,
            h = Object.keys(p.tokenStack);
          !(function e(n) {
            for (var a = 0; a < n.length && !(m >= h.length); a++) {
              var t = n[a];
              if ("string" == typeof t || (t.content && "string" == typeof t.content)) {
                var r = h[m],
                  i = p.tokenStack[r],
                  s = "string" == typeof t ? t : t.content,
                  l = b(f, r),
                  o = s.indexOf(l);
                if (-1 < o) {
                  ++m;
                  var u = s.substring(0, o),
                    c = new v.Token(f, v.tokenize(i, p.grammar), "language-" + f, i),
                    g = s.substring(o + l.length),
                    d = [];
                  u && d.push.apply(d, e([u])),
                  d.push(c),
                  g && d.push.apply(d, e([g])),
                  "string" == typeof t ? n.splice.apply(n, [a, 1].concat(d)) : (t.content = d);
                }
              } else t.content && e(t.content);
            }
            return n;
          })(p.tokens);
        }
      },
    },
  });
})(Prism),
(function(n) {
  (n.languages.handlebars = {
    comment: /\{\{![\s\S]*?\}\}/,
    delimiter: { pattern: /^\{\{\{?|\}\}\}?$/i, alias: "punctuation" },
    string: /(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,
    number: /\b0x[\dA-Fa-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,
    boolean: /\b(?:true|false)\b/,
    block: { pattern: /^(\s*~?\s*)[#\/]\S+?(?=\s*~?\s*$|\s)/i, lookbehind: !0, alias: "keyword" },
    brackets: { pattern: /\[[^\]]+\]/, inside: { punctuation: /\[|\]/, variable: /[\s\S]+/ } },
    punctuation: /[!"#%&':()*+,.\/;<=>@\[\\\]^`{|}~]/,
    variable: /[^!"#%&'()*+,\/;<=>@\[\\\]^`{|}~\s]+/,
  }),
  n.hooks.add("before-tokenize", function(e) {
    n.languages["markup-templating"].buildPlaceholders(e, "handlebars", /\{\{\{[\s\S]+?\}\}\}|\{\{[\s\S]+?\}\}/g);
  }),
  n.hooks.add("after-tokenize", function(e) {
    n.languages["markup-templating"].tokenizePlaceholders(e, "handlebars");
  });
})(Prism);
